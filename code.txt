# 사전투표로 본투표 예상
# 사전투표가 이상한 지역을 찾을꺼임.
# 갑을병으로 나눠지는 지역구는 갑만 계산.



# 패키지 설치 및 라이브러리 준비(설치는 처음에 한번만, 그 후는 라이브러리 준비만하면 됨.)
##############################################################################################
# install.packages("dplyr")
library(dplyr)
#############################################################################################
#지도 시각화를 위한 패키지 설치 및 라이브러리 준비

# install.packages("ggmap")
# install.packages("ggplot2")
# install.packages("raster")
# install.packages("rgeos")
# install.packages("maptools")
# install.packages("rgdal")
# install.packages("sf")

library(ggmap)
library(ggplot2)
library(raster)
library(rgeos)
library(maptools)
library(rgdal)
library(sf)
#############################################################################################
#############################################################################################
#csv 파일 불러오기(25개)

csv_01 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/01. 종로구.csv")
csv_02 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/02. 중구.csv")
csv_03 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/03. 용산구.csv")
csv_04 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/04. 성동구.csv")
csv_05 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/05. 광진구.csv")
csv_06 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/06. 동대문구.csv")
csv_07 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/07. 중랑구.csv")
csv_08 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/08. 성북구.csv")
csv_09 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/09. 강북구.csv")
csv_10 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/10. 도봉구.csv")
csv_11 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/11. 노원구.csv")
csv_12 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/12. 은평구.csv")
csv_13 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/13. 서대문구.csv")
csv_14 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/14. 마포구.csv")
csv_15 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/15. 양천구.csv")
csv_16 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/16. 강서구.csv")
csv_17 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/17. 구로구.csv")
csv_18 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/18. 금천구.csv")
csv_19 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/19. 영등포구.csv")
csv_20 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/20. 동작구.csv")
csv_21 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/21. 관악구.csv")
csv_22 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/22. 서초구.csv")
csv_23 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/23. 강남구.csv")
csv_24 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/24. 송파구.csv")
csv_25 <- read.csv("C:/Users/F1225/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/csv파일/25. 강동구.csv")


#############################################################################################################################################

####################################### 01. 종로구 ###################################################

bm_A_01 <- csv_01[c(5:87),c(2:6)] # 필요한 행과 열만 추출

bm_A_01 <- bm_A_01[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_01) <- c("투표구명", "투표수", "이낙연(좌파)", "황교안(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_01 <- bm_A_01[bm_A_01$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_01 <- sub(",", "", total_A_01)
total_A_01 <- as.integer(total_A_01)              # total_A_01 : 전체 투표수

total_A_L_01 <- bm_A_01[bm_A_01$투표구명 == "계", 3]
total_A_L_01 <- sub(",", "", total_A_L_01)
total_A_L_01 <- as.integer(total_A_L_01)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_01 <- bm_A_01[bm_A_01$투표구명 == "계", 4]
total_A_R_01 <- sub(",", "", total_A_R_01)
total_A_R_01 <- as.integer(total_A_R_01)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_01 <- total_A_L_01/total_A_01 # 좌파의 본투표비율
p_A_R_01 <- total_A_R_01/total_A_01 # 우파의 본투표비율

p_A_L_01
p_A_R_01

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_01 <- bm_A_01[bm_A_01$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_01 <- bm_A_01[bm_A_01$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_01 <- sub(",", "", total_ev_O_A_01) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_01 <- sub(",", "", total_ev_I_A_01)

total_ev_A_01 = sum(as.integer(total_ev_O_A_01), as.integer(total_ev_I_A_01)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_01 <- bm_A_01[bm_A_01$투표구명 == "관외사전투표" ,3]
ev_I_A_L_01 <- bm_A_01[bm_A_01$투표구명 == "관내사전투표",3]

ev_O_A_L_01 <- sub(",", "", ev_O_A_L_01)
ev_I_A_L_01 <- sub(",", "", ev_I_A_L_01)

ev_A_L_01 <- sum(as.integer(ev_O_A_L_01), as.integer(ev_I_A_L_01))

ev_A_L_01
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_01 <- bm_A_01[bm_A_01$투표구명 == "관외사전투표" ,4]
ev_I_A_R_01 <- bm_A_01[bm_A_01$투표구명 == "관내사전투표",4]

ev_O_A_R_01 <- sub(",", "", ev_O_A_R_01)
ev_I_A_R_01 <- sub(",", "", ev_I_A_R_01)

ev_A_R_01 <- sum(as.integer(ev_O_A_R_01), as.integer(ev_I_A_R_01))

ev_A_R_01


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_01 <- ev_A_L_01/total_ev_A_01
srp_A_L_01

dp_A_L_01 <- (srp_A_L_01)*(1-srp_A_L_01)/total_ev_A_01
dp_A_L_01

sdp_A_L_01 <- sqrt(dp_A_L_01)
sdp_A_L_01


# 우파 사전투표 비율

srp_A_R_01 <- ev_A_R_01/total_ev_A_01
srp_A_R_01

dp_A_R_01 <- (srp_A_R_01)*(1-srp_A_R_01)/total_ev_A_01
dp_A_R_01

sdp_A_R_01 <- sqrt(dp_A_R_01)
sdp_A_R_01

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_01-2.58*sdp_A_L_01, '<= p <=', srp_A_L_01+2.58*sdp_A_L_01)

if(p_A_L_01 >= srp_A_L_01-2.58*sdp_A_L_01 && p_A_L_01 <= srp_A_L_01+2.58*sdp_A_L_01){
  k_A_L_01 = abs(p_A_L_01-srp_A_L_01) / sdp_A_L_01
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_01 = abs(p_A_L_01-srp_A_L_01) / sdp_A_L_01
  cat("k값이", k_A_L_01, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_01-2.58*sdp_A_R_01, '<= p <=', srp_A_R_01+2.58*sdp_A_R_01)

if(p_A_R_01 >= srp_A_R_01-2.58*sdp_A_R_01 && p_A_R_01 <= srp_A_R_01+2.58*sdp_A_R_01){
  k_A_R_01 = abs(p_A_R_01-srp_A_R_01) / sdp_A_R_01
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_01 = abs(p_A_R_01-srp_A_R_01) / sdp_A_R_01
  cat("k값이", k_A_R_01, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_01
k_A_R_01

 ##########################################################################
# k(or z) 이상치값 추출

kA_A_L_01 <- c(0)
kA_A_R_01 <- c(0)

if(k_A_L_01> 34.36129){
  kA_A_L_01 = 1  
}else if(k_A_R_01> 34.36129){
  kA_A_R_01 = 1
}else{
  kA_A_L_01 = 0
  kA_A_R_01 = 0
}

kA_A_L_01
kA_A_R_01


#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 02. 중구 ###################################################

bm_A_02 <- csv_02[c(5:111),c(2:6)] # 필요한 행과 열만 추출

bm_A_02 <- bm_A_02[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_02) <- c("투표구명", "투표수", "박성주(좌파)", "지상욱(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_02 <- bm_A_02[bm_A_02$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_02 <- sub(",", "", total_A_02)
total_A_02 <- as.integer(total_A_02)              # total_A_01 : 전체 투표수

total_A_L_02 <- bm_A_02[bm_A_02$투표구명 == "계", 3]
total_A_L_02 <- sub(",", "", total_A_L_02)
total_A_L_02 <- as.integer(total_A_L_02)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_02 <- bm_A_02[bm_A_02$투표구명 == "계", 4]
total_A_R_02 <- sub(",", "", total_A_R_02)
total_A_R_02 <- as.integer(total_A_R_02)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_02 <- total_A_L_02/total_A_02 # 좌파의 본투표비율
p_A_R_02 <- total_A_R_02/total_A_02 # 우파의 본투표비율

p_A_L_02
p_A_R_02

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_02 <- bm_A_02[bm_A_02$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_02 <- bm_A_02[bm_A_02$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_02 <- sub(",", "", total_ev_O_A_02) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_02 <- sub(",", "", total_ev_I_A_02)

total_ev_A_02 = sum(as.integer(total_ev_O_A_02), as.integer(total_ev_I_A_02)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_02 <- bm_A_02[bm_A_02$투표구명 == "관외사전투표" ,3]
ev_I_A_L_02 <- bm_A_02[bm_A_02$투표구명 == "관내사전투표",3]

ev_O_A_L_02 <- sub(",", "", ev_O_A_L_02)
ev_I_A_L_02 <- sub(",", "", ev_I_A_L_02)

ev_A_L_02 <- sum(as.integer(ev_O_A_L_02), as.integer(ev_I_A_L_02))

ev_A_L_02
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_02 <- bm_A_02[bm_A_02$투표구명 == "관외사전투표" ,4]
ev_I_A_R_02 <- bm_A_02[bm_A_02$투표구명 == "관내사전투표",4]

ev_O_A_R_02 <- sub(",", "", ev_O_A_R_02)
ev_I_A_R_02 <- sub(",", "", ev_I_A_R_02)

ev_A_R_02 <- sum(as.integer(ev_O_A_R_02), as.integer(ev_I_A_R_02))

ev_A_R_02


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_02 <- ev_A_L_02/total_ev_A_02
srp_A_L_02

dp_A_L_02 <- (srp_A_L_02)*(1-srp_A_L_02)/total_ev_A_02
dp_A_L_02

sdp_A_L_02 <- sqrt(dp_A_L_02)
sdp_A_L_02


# 우파 사전투표 비율

srp_A_R_02 <- ev_A_R_02/total_ev_A_02
srp_A_R_02

dp_A_R_02 <- (srp_A_R_02)*(1-srp_A_R_02)/total_ev_A_02
dp_A_R_02

sdp_A_R_02 <- sqrt(dp_A_R_02)
sdp_A_R_02

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_02-2.58*sdp_A_L_02, '<= p <=', srp_A_L_02+2.58*sdp_A_L_02)

if(p_A_L_02 >= srp_A_L_02-2.58*sdp_A_L_02 && p_A_L_02 <= srp_A_L_02+2.58*sdp_A_L_02){
  k_A_L_02 = abs(p_A_L_02-srp_A_L_02) / sdp_A_L_02
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_02 = abs(p_A_L_02-srp_A_L_02) / sdp_A_L_02
  cat("k값이", k_A_L_02, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_02-2.58*sdp_A_R_02, '<= p <=', srp_A_R_02+2.58*sdp_A_R_02)

if(p_A_R_02 >= srp_A_R_02-2.58*sdp_A_R_02 && p_A_R_02 <= srp_A_R_02+2.58*sdp_A_R_02){
  k_A_R_02 = abs(p_A_R_02-srp_A_R_02) / sdp_A_R_02
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_02 = abs(p_A_R_02-srp_A_R_02) / sdp_A_R_02
  cat("k값이", k_A_R_02, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_02
k_A_R_02

##########################################################################
# k(or z) 이상치값 추출

kA_A_L_02 <- c(0)
kA_A_R_02 <- c(0)

if(k_A_L_02> 34.36129){
  kA_A_L_02 = 1  
}else if(k_A_R_02> 34.36129){
  kA_A_R_02 = 1
}else{
  kA_A_L_02 = 0
  kA_A_R_02 = 0
}

kA_A_L_02
kA_A_R_02


#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 03. 용산구 ###################################################

bm_A_03 <- csv_03[c(5:101),c(2:6)] # 필요한 행과 열만 추출

bm_A_03 <- bm_A_03[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_03) <- c("투표구명", "투표수", "강태웅(좌파)", "권영세(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_03 <- bm_A_03[bm_A_03$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_03 <- sub(",", "", total_A_03)
total_A_03 <- as.integer(total_A_03)              # total_A_01 : 전체 투표수

total_A_L_03 <- bm_A_03[bm_A_03$투표구명 == "계", 3]
total_A_L_03 <- sub(",", "", total_A_L_03)
total_A_L_03 <- as.integer(total_A_L_03)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_03 <- bm_A_03[bm_A_03$투표구명 == "계", 4]
total_A_R_03 <- sub(",", "", total_A_R_03)
total_A_R_03 <- as.integer(total_A_R_03)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_03 <- total_A_L_03/total_A_03 # 좌파의 본투표비율
p_A_R_03 <- total_A_R_03/total_A_03 # 우파의 본투표비율

p_A_L_03
p_A_R_03

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_03 <- bm_A_03[bm_A_03$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_03 <- bm_A_03[bm_A_03$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_03 <- sub(",", "", total_ev_O_A_03) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_03 <- sub(",", "", total_ev_I_A_03)

total_ev_A_03 = sum(as.integer(total_ev_O_A_03), as.integer(total_ev_I_A_03)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_03 <- bm_A_03[bm_A_03$투표구명 == "관외사전투표" ,3]
ev_I_A_L_03 <- bm_A_03[bm_A_03$투표구명 == "관내사전투표",3]

ev_O_A_L_03 <- sub(",", "", ev_O_A_L_03)
ev_I_A_L_03 <- sub(",", "", ev_I_A_L_03)

ev_A_L_03 <- sum(as.integer(ev_O_A_L_03), as.integer(ev_I_A_L_03))

ev_A_L_03
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_03 <- bm_A_03[bm_A_03$투표구명 == "관외사전투표" ,4]
ev_I_A_R_03 <- bm_A_03[bm_A_03$투표구명 == "관내사전투표",4]

ev_O_A_R_03 <- sub(",", "", ev_O_A_R_03)
ev_I_A_R_03 <- sub(",", "", ev_I_A_R_03)

ev_A_R_03 <- sum(as.integer(ev_O_A_R_03), as.integer(ev_I_A_R_03))

ev_A_R_03


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_03 <- ev_A_L_03/total_ev_A_03
srp_A_L_03

dp_A_L_03 <- (srp_A_L_03)*(1-srp_A_L_03)/total_ev_A_03
dp_A_L_03

sdp_A_L_03 <- sqrt(dp_A_L_03)
sdp_A_L_03


# 우파 사전투표 비율

srp_A_R_03 <- ev_A_R_03/total_ev_A_03
srp_A_R_03

dp_A_R_03 <- (srp_A_R_03)*(1-srp_A_R_03)/total_ev_A_03
dp_A_R_03

sdp_A_R_03 <- sqrt(dp_A_R_03)
sdp_A_R_03

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_03-2.58*sdp_A_L_03, '<= p <=', srp_A_L_03+2.58*sdp_A_L_03)

if(p_A_L_03 >= srp_A_L_03-2.58*sdp_A_L_03 && p_A_L_03 <= srp_A_L_03+2.58*sdp_A_L_03){
  k_A_L_03 = abs(p_A_L_03-srp_A_L_03) / sdp_A_L_03
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_03 = abs(p_A_L_03-srp_A_L_03) / sdp_A_L_03
  cat("k값이", k_A_L_03, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_03-2.58*sdp_A_R_03, '<= p <=', srp_A_R_03+2.58*sdp_A_R_03)

if(p_A_R_03 >= srp_A_R_03-2.58*sdp_A_R_03 && p_A_R_03 <= srp_A_R_03+2.58*sdp_A_R_03){
  k_A_R_03 = abs(p_A_R_03-srp_A_R_03) / sdp_A_R_03
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_03 = abs(p_A_R_03-srp_A_R_03) / sdp_A_R_03
  cat("k값이", k_A_R_03, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_03
k_A_R_03
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_03 <- c(0)
kA_A_R_03 <- c(0)

if(k_A_L_03> 34.36129){
  kA_A_L_03 = 1  
}else if(k_A_R_03> 34.36129){
  kA_A_R_03 = 1
}else{
  kA_A_L_03 = 0
  kA_A_R_03 = 0
}

kA_A_L_03
kA_A_R_03


#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 04. 성동구 ###################################################

bm_A_04 <- csv_04[c(5:88),c(2:6)] # 필요한 행과 열만 추출

bm_A_04 <- bm_A_04[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_04) <- c("투표구명", "투표수", "홍익표(좌파)", "진수희(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_04 <- bm_A_04[bm_A_04$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_04 <- sub(",", "", total_A_04)
total_A_04 <- as.integer(total_A_04)              # total_A_01 : 전체 투표수

total_A_L_04 <- bm_A_04[bm_A_04$투표구명 == "계", 3]
total_A_L_04 <- sub(",", "", total_A_L_04)
total_A_L_04 <- as.integer(total_A_L_04)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_04 <- bm_A_04[bm_A_04$투표구명 == "계", 4]
total_A_R_04 <- sub(",", "", total_A_R_04)
total_A_R_04 <- as.integer(total_A_R_04)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_04 <- total_A_L_04/total_A_04 # 좌파의 본투표비율
p_A_R_04 <- total_A_R_04/total_A_04 # 우파의 본투표비율

p_A_L_04
p_A_R_04

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_04 <- bm_A_04[bm_A_04$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_04 <- bm_A_04[bm_A_04$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_04 <- sub(",", "", total_ev_O_A_04) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_04 <- sub(",", "", total_ev_I_A_04)

total_ev_A_04 = sum(as.integer(total_ev_O_A_04), as.integer(total_ev_I_A_04)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_04 <- bm_A_04[bm_A_04$투표구명 == "관외사전투표" ,3]
ev_I_A_L_04 <- bm_A_04[bm_A_04$투표구명 == "관내사전투표",3]

ev_O_A_L_04 <- sub(",", "", ev_O_A_L_04)
ev_I_A_L_04 <- sub(",", "", ev_I_A_L_04)

ev_A_L_04 <- sum(as.integer(ev_O_A_L_04), as.integer(ev_I_A_L_04))

ev_A_L_04
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_04 <- bm_A_04[bm_A_04$투표구명 == "관외사전투표" ,4]
ev_I_A_R_04 <- bm_A_04[bm_A_04$투표구명 == "관내사전투표",4]

ev_O_A_R_04 <- sub(",", "", ev_O_A_R_04)
ev_I_A_R_04 <- sub(",", "", ev_I_A_R_04)

ev_A_R_04 <- sum(as.integer(ev_O_A_R_04), as.integer(ev_I_A_R_04))

ev_A_R_04


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_04 <- ev_A_L_04/total_ev_A_04
srp_A_L_04

dp_A_L_04 <- (srp_A_L_04)*(1-srp_A_L_04)/total_ev_A_04
dp_A_L_04

sdp_A_L_04 <- sqrt(dp_A_L_04)
sdp_A_L_04


# 우파 사전투표 비율

srp_A_R_04 <- ev_A_R_04/total_ev_A_04
srp_A_R_04

dp_A_R_04 <- (srp_A_R_04)*(1-srp_A_R_04)/total_ev_A_04
dp_A_R_04

sdp_A_R_04 <- sqrt(dp_A_R_04)
sdp_A_R_04

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_04-2.58*sdp_A_L_04, '<= p <=', srp_A_L_04+2.58*sdp_A_L_04)

if(p_A_L_04 >= srp_A_L_04-2.58*sdp_A_L_04 && p_A_L_04 <= srp_A_L_04+2.58*sdp_A_L_04){
  k_A_L_04 = abs(p_A_L_04-srp_A_L_04) / sdp_A_L_04
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_04 = abs(p_A_L_04-srp_A_L_04) / sdp_A_L_04
  cat("k값이", k_A_L_04, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_04-2.58*sdp_A_R_04, '<= p <=', srp_A_R_04+2.58*sdp_A_R_04)

if(p_A_R_04 >= srp_A_R_04-2.58*sdp_A_R_04 && p_A_R_04 <= srp_A_R_04+2.58*sdp_A_R_04){
  k_A_R_04 = abs(p_A_R_04-srp_A_R_04) / sdp_A_R_04
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_04 = abs(p_A_R_04-srp_A_R_04) / sdp_A_R_04
  cat("k값이", k_A_R_04, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_04
k_A_R_04
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_04 <- c(0)
kA_A_R_04 <- c(0)

if(k_A_L_04> 34.36129){
  kA_A_L_04 = 1  
}else if(k_A_R_04> 34.36129){
  kA_A_R_04 = 1
}else{
  kA_A_L_04 = 0
  kA_A_R_04 = 0
}

kA_A_L_04
kA_A_R_04



#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 05. 광진구 ###################################################
######################################## 갑 A ########################################################


bm_A_05 <- csv_05[c(5:68),c(2:6)] # 필요한 행과 열만 추출

bm_A_05 <- bm_A_05[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_05) <- c("투표구명", "투표수", "전혜숙(좌파)", "김병민(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_05 <- bm_A_05[bm_A_05$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_05 <- sub(",", "", total_A_05)
total_A_05 <- as.integer(total_A_05)              # total_A_01 : 전체 투표수

total_A_L_05 <- bm_A_05[bm_A_05$투표구명 == "계", 3]
total_A_L_05 <- sub(",", "", total_A_L_05)
total_A_L_05 <- as.integer(total_A_L_05)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_05 <- bm_A_05[bm_A_05$투표구명 == "계", 4]
total_A_R_05 <- sub(",", "", total_A_R_05)
total_A_R_05 <- as.integer(total_A_R_05)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_05 <- total_A_L_05/total_A_05 # 좌파의 본투표비율
p_A_R_05 <- total_A_R_05/total_A_05 # 우파의 본투표비율

p_A_L_05
p_A_R_05

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_05 <- bm_A_05[bm_A_05$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_05 <- bm_A_05[bm_A_05$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_05 <- sub(",", "", total_ev_O_A_05) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_05 <- sub(",", "", total_ev_I_A_05)

total_ev_A_05 = sum(as.integer(total_ev_O_A_05), as.integer(total_ev_I_A_05)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_05 <- bm_A_05[bm_A_05$투표구명 == "관외사전투표" ,3]
ev_I_A_L_05 <- bm_A_05[bm_A_05$투표구명 == "관내사전투표",3]

ev_O_A_L_05 <- sub(",", "", ev_O_A_L_05)
ev_I_A_L_05 <- sub(",", "", ev_I_A_L_05)

ev_A_L_05 <- sum(as.integer(ev_O_A_L_05), as.integer(ev_I_A_L_05))

ev_A_L_05
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_05 <- bm_A_05[bm_A_05$투표구명 == "관외사전투표" ,4]
ev_I_A_R_05 <- bm_A_05[bm_A_05$투표구명 == "관내사전투표",4]

ev_O_A_R_05 <- sub(",", "", ev_O_A_R_05)
ev_I_A_R_05 <- sub(",", "", ev_I_A_R_05)

ev_A_R_05 <- sum(as.integer(ev_O_A_R_05), as.integer(ev_I_A_R_05))

ev_A_R_05


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_05 <- ev_A_L_05/total_ev_A_05
srp_A_L_05

dp_A_L_05 <- (srp_A_L_05)*(1-srp_A_L_05)/total_ev_A_05
dp_A_L_05

sdp_A_L_05 <- sqrt(dp_A_L_05)
sdp_A_L_05


# 우파 사전투표 비율

srp_A_R_05 <- ev_A_R_05/total_ev_A_05
srp_A_R_05

dp_A_R_05 <- (srp_A_R_05)*(1-srp_A_R_05)/total_ev_A_05
dp_A_R_05

sdp_A_R_05 <- sqrt(dp_A_R_05)
sdp_A_R_05

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_05-2.58*sdp_A_L_05, '<= p <=', srp_A_L_05+2.58*sdp_A_L_05)

if(p_A_L_05 >= srp_A_L_05-2.58*sdp_A_L_05 && p_A_L_05 <= srp_A_L_05+2.58*sdp_A_L_05){
  k_A_L_05 = abs(p_A_L_05-srp_A_L_05) / sdp_A_L_05
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_05 = abs(p_A_L_05-srp_A_L_05) / sdp_A_L_05
  cat("k값이", k_A_L_05, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_05-2.58*sdp_A_R_05, '<= p <=', srp_A_R_05+2.58*sdp_A_R_05)

if(p_A_R_05 >= srp_A_R_05-2.58*sdp_A_R_05 && p_A_R_05 <= srp_A_R_05+2.58*sdp_A_R_05){
  k_A_R_05 = abs(p_A_R_05-srp_A_R_05) / sdp_A_R_05
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_05 = abs(p_A_R_05-srp_A_R_05) / sdp_A_R_05
  cat("k값이", k_A_R_05, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_05
k_A_R_05
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_05 <- c(0)
kA_A_R_05 <- c(0)

if(k_A_L_05> 34.36129){
  kA_A_L_05 = 1  
}else if(k_A_R_05> 34.36129){
  kA_A_R_05 = 1
}else{
  kA_A_L_05 = 0
  kA_A_R_05 = 0
}

kA_A_L_05
kA_A_R_05



#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 06. 동대문구 ###################################################
######################################## 갑 A ########################################################


bm_A_06 <- csv_06[c(5:70),c(2:6)] # 필요한 행과 열만 추출

bm_A_06 <- bm_A_06[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_06) <- c("투표구명", "투표수", "안규백(좌파)", "허용범(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_06 <- bm_A_06[bm_A_06$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_06 <- sub(",", "", total_A_06)
total_A_06 <- as.integer(total_A_06)              # total_A_01 : 전체 투표수

total_A_L_06 <- bm_A_06[bm_A_06$투표구명 == "계", 3]
total_A_L_06 <- sub(",", "", total_A_L_06)
total_A_L_06 <- as.integer(total_A_L_06)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_06 <- bm_A_06[bm_A_06$투표구명 == "계", 4]
total_A_R_06 <- sub(",", "", total_A_R_06)
total_A_R_06 <- as.integer(total_A_R_06)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_06 <- total_A_L_06/total_A_06 # 좌파의 본투표비율
p_A_R_06 <- total_A_R_06/total_A_06 # 우파의 본투표비율

p_A_L_06
p_A_R_06

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_06 <- bm_A_06[bm_A_06$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_06 <- bm_A_06[bm_A_06$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_06 <- sub(",", "", total_ev_O_A_06) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_06 <- sub(",", "", total_ev_I_A_06)

total_ev_A_06 = sum(as.integer(total_ev_O_A_06), as.integer(total_ev_I_A_06)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_06 <- bm_A_06[bm_A_06$투표구명 == "관외사전투표" ,3]
ev_I_A_L_06 <- bm_A_06[bm_A_06$투표구명 == "관내사전투표",3]

ev_O_A_L_06 <- sub(",", "", ev_O_A_L_06)
ev_I_A_L_06 <- sub(",", "", ev_I_A_L_06)

ev_A_L_06 <- sum(as.integer(ev_O_A_L_06), as.integer(ev_I_A_L_06))

ev_A_L_06
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_06 <- bm_A_06[bm_A_06$투표구명 == "관외사전투표" ,4]
ev_I_A_R_06 <- bm_A_06[bm_A_06$투표구명 == "관내사전투표",4]

ev_O_A_R_06 <- sub(",", "", ev_O_A_R_06)
ev_I_A_R_06 <- sub(",", "", ev_I_A_R_06)

ev_A_R_06 <- sum(as.integer(ev_O_A_R_06), as.integer(ev_I_A_R_06))

ev_A_R_06


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_06 <- ev_A_L_06/total_ev_A_06
srp_A_L_06

dp_A_L_06 <- (srp_A_L_06)*(1-srp_A_L_06)/total_ev_A_06
dp_A_L_06

sdp_A_L_06 <- sqrt(dp_A_L_06)
sdp_A_L_06


# 우파 사전투표 비율

srp_A_R_06 <- ev_A_R_06/total_ev_A_06
srp_A_R_06

dp_A_R_06 <- (srp_A_R_06)*(1-srp_A_R_06)/total_ev_A_06
dp_A_R_06

sdp_A_R_06 <- sqrt(dp_A_R_06)
sdp_A_R_06

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_06-2.58*sdp_A_L_06, '<= p <=', srp_A_L_06+2.58*sdp_A_L_06)

if(p_A_L_06 >= srp_A_L_06-2.58*sdp_A_L_06 && p_A_L_06 <= srp_A_L_06+2.58*sdp_A_L_06){
  k_A_L_06 = abs(p_A_L_06-srp_A_L_06) / sdp_A_L_06
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_06 = abs(p_A_L_06-srp_A_L_06) / sdp_A_L_06
  cat("k값이", k_A_L_06, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_06-2.58*sdp_A_R_06, '<= p <=', srp_A_R_06+2.58*sdp_A_R_06)

if(p_A_R_06 >= srp_A_R_06-2.58*sdp_A_R_06 && p_A_R_06 <= srp_A_R_06+2.58*sdp_A_R_06){
  k_A_R_06 = abs(p_A_R_06-srp_A_R_06) / sdp_A_R_06
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_06 = abs(p_A_R_06-srp_A_R_06) / sdp_A_R_06
  cat("k값이", k_A_R_06, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_06
k_A_R_06
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_06 <- c(0)
kA_A_R_06 <- c(0)

if(k_A_L_06> 34.36129){
  kA_A_L_06 = 1  
}else if(k_A_R_06> 34.36129){
  kA_A_R_06 = 1
}else{
  kA_A_L_06 = 0
  kA_A_R_06 = 0
}

kA_A_L_06
kA_A_R_06



#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 07. 중랑구 ###################################################
######################################## 갑 A ########################################################


bm_A_07 <- csv_07[c(5:65),c(2:6)] # 필요한 행과 열만 추출

bm_A_07 <- bm_A_07[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_07) <- c("투표구명", "투표수", "서영교(좌파)", "김삼화(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_07 <- bm_A_07[bm_A_07$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_07 <- sub(",", "", total_A_07)
total_A_07 <- as.integer(total_A_07)              # total_A_01 : 전체 투표수

total_A_L_07 <- bm_A_07[bm_A_07$투표구명 == "계", 3]
total_A_L_07 <- sub(",", "", total_A_L_07)
total_A_L_07 <- as.integer(total_A_L_07)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_07 <- bm_A_07[bm_A_07$투표구명 == "계", 4]
total_A_R_07 <- sub(",", "", total_A_R_07)
total_A_R_07 <- as.integer(total_A_R_07)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_07 <- total_A_L_07/total_A_07 # 좌파의 본투표비율
p_A_R_07 <- total_A_R_07/total_A_07 # 우파의 본투표비율

p_A_L_07
p_A_R_07

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_07 <- bm_A_07[bm_A_07$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_07 <- bm_A_07[bm_A_07$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_07 <- sub(",", "", total_ev_O_A_07) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_07 <- sub(",", "", total_ev_I_A_07)

total_ev_A_07 = sum(as.integer(total_ev_O_A_07), as.integer(total_ev_I_A_07)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_07 <- bm_A_07[bm_A_07$투표구명 == "관외사전투표" ,3]
ev_I_A_L_07 <- bm_A_07[bm_A_07$투표구명 == "관내사전투표",3]

ev_O_A_L_07 <- sub(",", "", ev_O_A_L_07)
ev_I_A_L_07 <- sub(",", "", ev_I_A_L_07)

ev_A_L_07 <- sum(as.integer(ev_O_A_L_07), as.integer(ev_I_A_L_07))

ev_A_L_07
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_07 <- bm_A_07[bm_A_07$투표구명 == "관외사전투표" ,4]
ev_I_A_R_07 <- bm_A_07[bm_A_07$투표구명 == "관내사전투표",4]

ev_O_A_R_07 <- sub(",", "", ev_O_A_R_07)
ev_I_A_R_07 <- sub(",", "", ev_I_A_R_07)

ev_A_R_07 <- sum(as.integer(ev_O_A_R_07), as.integer(ev_I_A_R_07))

ev_A_R_07


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_07 <- ev_A_L_07/total_ev_A_07
srp_A_L_07

dp_A_L_07 <- (srp_A_L_07)*(1-srp_A_L_07)/total_ev_A_07
dp_A_L_07

sdp_A_L_07 <- sqrt(dp_A_L_07)
sdp_A_L_07


# 우파 사전투표 비율

srp_A_R_07 <- ev_A_R_07/total_ev_A_07
srp_A_R_07

dp_A_R_07 <- (srp_A_R_07)*(1-srp_A_R_07)/total_ev_A_07
dp_A_R_07

sdp_A_R_07 <- sqrt(dp_A_R_07)
sdp_A_R_07

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_07-2.58*sdp_A_L_07, '<= p <=', srp_A_L_07+2.58*sdp_A_L_07)

if(p_A_L_07 >= srp_A_L_07-2.58*sdp_A_L_07 && p_A_L_07 <= srp_A_L_07+2.58*sdp_A_L_07){
  k_A_L_07 = abs(p_A_L_07-srp_A_L_07) / sdp_A_L_07
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_07 = abs(p_A_L_07-srp_A_L_07) / sdp_A_L_07
  cat("k값이", k_A_L_07, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_07-2.58*sdp_A_R_07, '<= p <=', srp_A_R_07+2.58*sdp_A_R_07)

if(p_A_R_07 >= srp_A_R_07-2.58*sdp_A_R_07 && p_A_R_07 <= srp_A_R_07+2.58*sdp_A_R_07){
  k_A_R_07 = abs(p_A_R_07-srp_A_R_07) / sdp_A_R_07
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_07 = abs(p_A_R_07-srp_A_R_07) / sdp_A_R_07
  cat("k값이", k_A_R_07, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_07
k_A_R_07
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_07 <- c(0)
kA_A_R_07 <- c(0)

if(k_A_L_07> 34.36129){
  kA_A_L_07 = 1  
}else if(k_A_R_07> 34.36129){
  kA_A_R_07 = 1
}else{
  kA_A_L_07 = 0
  kA_A_R_07 = 0
}

kA_A_L_07
kA_A_R_07




#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 08. 성북구 ###################################################
######################################## 갑 A ########################################################


bm_A_08 <- csv_08[c(5:81),c(2:6)] # 필요한 행과 열만 추출

bm_A_08 <- bm_A_08[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_08) <- c("투표구명", "투표수", "김영배(좌파)", "한상학(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_08 <- bm_A_08[bm_A_08$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_08 <- sub(",", "", total_A_08)
total_A_08 <- as.integer(total_A_08)              # total_A_01 : 전체 투표수

total_A_L_08 <- bm_A_08[bm_A_08$투표구명 == "계", 3]
total_A_L_08 <- sub(",", "", total_A_L_08)
total_A_L_08 <- as.integer(total_A_L_08)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_08 <- bm_A_08[bm_A_08$투표구명 == "계", 4]
total_A_R_08 <- sub(",", "", total_A_R_08)
total_A_R_08 <- as.integer(total_A_R_08)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_08 <- total_A_L_08/total_A_08 # 좌파의 본투표비율
p_A_R_08 <- total_A_R_08/total_A_08 # 우파의 본투표비율

p_A_L_08
p_A_R_08

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_08 <- bm_A_08[bm_A_08$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_08 <- bm_A_08[bm_A_08$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_08 <- sub(",", "", total_ev_O_A_08) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_08 <- sub(",", "", total_ev_I_A_08)

total_ev_A_08 = sum(as.integer(total_ev_O_A_08), as.integer(total_ev_I_A_08)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_08 <- bm_A_08[bm_A_08$투표구명 == "관외사전투표" ,3]
ev_I_A_L_08 <- bm_A_08[bm_A_08$투표구명 == "관내사전투표",3]

ev_O_A_L_08 <- sub(",", "", ev_O_A_L_08)
ev_I_A_L_08 <- sub(",", "", ev_I_A_L_08)

ev_A_L_08 <- sum(as.integer(ev_O_A_L_08), as.integer(ev_I_A_L_08))

ev_A_L_08
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_08 <- bm_A_08[bm_A_08$투표구명 == "관외사전투표" ,4]
ev_I_A_R_08 <- bm_A_08[bm_A_08$투표구명 == "관내사전투표",4]

ev_O_A_R_08 <- sub(",", "", ev_O_A_R_08)
ev_I_A_R_08 <- sub(",", "", ev_I_A_R_08)

ev_A_R_08 <- sum(as.integer(ev_O_A_R_08), as.integer(ev_I_A_R_08))

ev_A_R_08


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_08 <- ev_A_L_08/total_ev_A_08
srp_A_L_08

dp_A_L_08 <- (srp_A_L_08)*(1-srp_A_L_08)/total_ev_A_08
dp_A_L_08

sdp_A_L_08 <- sqrt(dp_A_L_08)
sdp_A_L_08


# 우파 사전투표 비율

srp_A_R_08 <- ev_A_R_08/total_ev_A_08
srp_A_R_08

dp_A_R_08 <- (srp_A_R_08)*(1-srp_A_R_08)/total_ev_A_08
dp_A_R_08

sdp_A_R_08 <- sqrt(dp_A_R_08)
sdp_A_R_08

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_08-2.58*sdp_A_L_08, '<= p <=', srp_A_L_08+2.58*sdp_A_L_08)

if(p_A_L_08 >= srp_A_L_08-2.58*sdp_A_L_08 && p_A_L_08 <= srp_A_L_08+2.58*sdp_A_L_08){
  k_A_L_08 = abs(p_A_L_08-srp_A_L_08) / sdp_A_L_08
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_08 = abs(p_A_L_08-srp_A_L_08) / sdp_A_L_08
  cat("k값이", k_A_L_08, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_08-2.58*sdp_A_R_08, '<= p <=', srp_A_R_08+2.58*sdp_A_R_08)

if(p_A_R_08 >= srp_A_R_08-2.58*sdp_A_R_08 && p_A_R_08 <= srp_A_R_08+2.58*sdp_A_R_08){
  k_A_R_08 = abs(p_A_R_08-srp_A_R_08) / sdp_A_R_08
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_08 = abs(p_A_R_08-srp_A_R_08) / sdp_A_R_08
  cat("k값이", k_A_R_08, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_08
k_A_R_08
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_08 <- c(0)
kA_A_R_08 <- c(0)

if(k_A_L_08> 34.36129){
  kA_A_L_08 = 1  
}else if(k_A_R_08> 34.36129){
  kA_A_R_08 = 1
}else{
  kA_A_L_08 = 0
  kA_A_R_08 = 0
}

kA_A_L_08
kA_A_R_08



#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 09. 강북구 ###################################################
######################################## 갑 A ########################################################


bm_A_09 <- csv_09[c(5:62),c(2:6)] # 필요한 행과 열만 추출

bm_A_09 <- bm_A_09[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_09) <- c("투표구명", "투표수", "천준호(좌파)", "정양석(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_09 <- bm_A_09[bm_A_09$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_09 <- sub(",", "", total_A_09)
total_A_09 <- as.integer(total_A_09)              # total_A_01 : 전체 투표수

total_A_L_09 <- bm_A_09[bm_A_09$투표구명 == "계", 3]
total_A_L_09 <- sub(",", "", total_A_L_09)
total_A_L_09 <- as.integer(total_A_L_09)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_09 <- bm_A_09[bm_A_09$투표구명 == "계", 4]
total_A_R_09 <- sub(",", "", total_A_R_09)
total_A_R_09 <- as.integer(total_A_R_09)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_09 <- total_A_L_09/total_A_09 # 좌파의 본투표비율
p_A_R_09 <- total_A_R_09/total_A_09 # 우파의 본투표비율

p_A_L_09
p_A_R_09

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_09 <- bm_A_09[bm_A_09$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_09 <- bm_A_09[bm_A_09$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_09 <- sub(",", "", total_ev_O_A_09) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_09 <- sub(",", "", total_ev_I_A_09)

total_ev_A_09 = sum(as.integer(total_ev_O_A_09), as.integer(total_ev_I_A_09)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_09 <- bm_A_09[bm_A_09$투표구명 == "관외사전투표" ,3]
ev_I_A_L_09 <- bm_A_09[bm_A_09$투표구명 == "관내사전투표",3]

ev_O_A_L_09 <- sub(",", "", ev_O_A_L_09)
ev_I_A_L_09 <- sub(",", "", ev_I_A_L_09)

ev_A_L_09 <- sum(as.integer(ev_O_A_L_09), as.integer(ev_I_A_L_09))

ev_A_L_09
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_09 <- bm_A_09[bm_A_09$투표구명 == "관외사전투표" ,4]
ev_I_A_R_09 <- bm_A_09[bm_A_09$투표구명 == "관내사전투표",4]

ev_O_A_R_09 <- sub(",", "", ev_O_A_R_09)
ev_I_A_R_09 <- sub(",", "", ev_I_A_R_09)

ev_A_R_09 <- sum(as.integer(ev_O_A_R_09), as.integer(ev_I_A_R_09))

ev_A_R_09


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_09 <- ev_A_L_09/total_ev_A_09
srp_A_L_09

dp_A_L_09 <- (srp_A_L_09)*(1-srp_A_L_09)/total_ev_A_09
dp_A_L_09

sdp_A_L_09 <- sqrt(dp_A_L_09)
sdp_A_L_09


# 우파 사전투표 비율

srp_A_R_09 <- ev_A_R_09/total_ev_A_09
srp_A_R_09

dp_A_R_09 <- (srp_A_R_09)*(1-srp_A_R_09)/total_ev_A_09
dp_A_R_09

sdp_A_R_09 <- sqrt(dp_A_R_09)
sdp_A_R_09

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_09-2.58*sdp_A_L_09, '<= p <=', srp_A_L_09+2.58*sdp_A_L_09)

if(p_A_L_09 >= srp_A_L_09-2.58*sdp_A_L_09 && p_A_L_09 <= srp_A_L_09+2.58*sdp_A_L_09){
  k_A_L_09 = abs(p_A_L_09-srp_A_L_09) / sdp_A_L_09
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_09 = abs(p_A_L_09-srp_A_L_09) / sdp_A_L_09
  cat("k값이", k_A_L_09, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_09-2.58*sdp_A_R_09, '<= p <=', srp_A_R_09+2.58*sdp_A_R_09)

if(p_A_R_09 >= srp_A_R_09-2.58*sdp_A_R_09 && p_A_R_09 <= srp_A_R_09+2.58*sdp_A_R_09){
  k_A_R_09 = abs(p_A_R_09-srp_A_R_09) / sdp_A_R_09
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_09 = abs(p_A_R_09-srp_A_R_09) / sdp_A_R_09
  cat("k값이", k_A_R_09, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_09
k_A_R_09
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_09 <- c(0)
kA_A_R_09 <- c(0)

if(k_A_L_09> 34.36129){
  kA_A_L_09 = 1  
}else if(k_A_R_09> 34.36129){
  kA_A_R_09 = 1
}else{
  kA_A_L_09 = 0
  kA_A_R_09 = 0
}

kA_A_L_09
kA_A_R_09



#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 10. 도봉구 ###################################################
######################################## 갑 A ########################################################


bm_A_10 <- csv_10[c(5:62),c(2:6)] # 필요한 행과 열만 추출

bm_A_10 <- bm_A_10[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_10) <- c("투표구명", "투표수", "인재근(좌파)", "김재섭(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_10 <- bm_A_10[bm_A_10$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_10 <- sub(",", "", total_A_10)
total_A_10 <- as.integer(total_A_10)              # total_A_01 : 전체 투표수

total_A_L_10 <- bm_A_10[bm_A_10$투표구명 == "계", 3]
total_A_L_10 <- sub(",", "", total_A_L_10)
total_A_L_10 <- as.integer(total_A_L_10)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_10 <- bm_A_10[bm_A_10$투표구명 == "계", 4]
total_A_R_10 <- sub(",", "", total_A_R_10)
total_A_R_10 <- as.integer(total_A_R_10)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_10 <- total_A_L_10/total_A_10 # 좌파의 본투표비율
p_A_R_10 <- total_A_R_10/total_A_10 # 우파의 본투표비율

p_A_L_10
p_A_R_10

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_10 <- bm_A_10[bm_A_10$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_10 <- bm_A_10[bm_A_10$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_10 <- sub(",", "", total_ev_O_A_10) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_10 <- sub(",", "", total_ev_I_A_10)

total_ev_A_10 = sum(as.integer(total_ev_O_A_10), as.integer(total_ev_I_A_10)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_10 <- bm_A_10[bm_A_10$투표구명 == "관외사전투표" ,3]
ev_I_A_L_10 <- bm_A_10[bm_A_10$투표구명 == "관내사전투표",3]

ev_O_A_L_10 <- sub(",", "", ev_O_A_L_10)
ev_I_A_L_10 <- sub(",", "", ev_I_A_L_10)

ev_A_L_10 <- sum(as.integer(ev_O_A_L_10), as.integer(ev_I_A_L_10))

ev_A_L_10
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_10 <- bm_A_10[bm_A_10$투표구명 == "관외사전투표" ,4]
ev_I_A_R_10 <- bm_A_10[bm_A_10$투표구명 == "관내사전투표",4]

ev_O_A_R_10 <- sub(",", "", ev_O_A_R_10)
ev_I_A_R_10 <- sub(",", "", ev_I_A_R_10)

ev_A_R_10 <- sum(as.integer(ev_O_A_R_10), as.integer(ev_I_A_R_10))

ev_A_R_10


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_10 <- ev_A_L_10/total_ev_A_10
srp_A_L_10

dp_A_L_10 <- (srp_A_L_10)*(1-srp_A_L_10)/total_ev_A_10
dp_A_L_10

sdp_A_L_10 <- sqrt(dp_A_L_10)
sdp_A_L_10


# 우파 사전투표 비율

srp_A_R_10 <- ev_A_R_10/total_ev_A_10
srp_A_R_10

dp_A_R_10 <- (srp_A_R_10)*(1-srp_A_R_10)/total_ev_A_10
dp_A_R_10

sdp_A_R_10 <- sqrt(dp_A_R_10)
sdp_A_R_10

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_10-2.58*sdp_A_L_10, '<= p <=', srp_A_L_10+2.58*sdp_A_L_10)

if(p_A_L_10 >= srp_A_L_10-2.58*sdp_A_L_10 && p_A_L_10 <= srp_A_L_10+2.58*sdp_A_L_10){
  k_A_L_10 = abs(p_A_L_10-srp_A_L_10) / sdp_A_L_10
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_10 = abs(p_A_L_10-srp_A_L_10) / sdp_A_L_10
  cat("k값이", k_A_L_10, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_10-2.58*sdp_A_R_10, '<= p <=', srp_A_R_10+2.58*sdp_A_R_10)

if(p_A_R_10 >= srp_A_R_10-2.58*sdp_A_R_10 && p_A_R_10 <= srp_A_R_10+2.58*sdp_A_R_10){
  k_A_R_10 = abs(p_A_R_10-srp_A_R_10) / sdp_A_R_10
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_10 = abs(p_A_R_10-srp_A_R_10) / sdp_A_R_10
  cat("k값이", k_A_R_10, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_10
k_A_R_10
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_10 <- c(0)
kA_A_R_10 <- c(0)

if(k_A_L_10> 34.36129){
  kA_A_L_10 = 1  
}else if(k_A_R_10> 34.36129){
  kA_A_R_10 = 1
}else{
  kA_A_L_10 = 0
  kA_A_R_10 = 0
}

kA_A_L_10
kA_A_R_10



#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 11. 노원구 ###################################################
######################################## 갑 A ########################################################


bm_A_11 <- csv_11[c(5:58),c(2:6)] # 필요한 행과 열만 추출

bm_A_11 <- bm_A_11[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_11) <- c("투표구명", "투표수", "고용진(좌파)", "이노근(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_11 <- bm_A_11[bm_A_11$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_11 <- sub(",", "", total_A_11)
total_A_11 <- as.integer(total_A_11)              # total_A_01 : 전체 투표수

total_A_L_11 <- bm_A_11[bm_A_11$투표구명 == "계", 3]
total_A_L_11 <- sub(",", "", total_A_L_11)
total_A_L_11 <- as.integer(total_A_L_11)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_11 <- bm_A_11[bm_A_11$투표구명 == "계", 4]
total_A_R_11 <- sub(",", "", total_A_R_11)
total_A_R_11 <- as.integer(total_A_R_11)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_11 <- total_A_L_11/total_A_11 # 좌파의 본투표비율
p_A_R_11 <- total_A_R_11/total_A_11 # 우파의 본투표비율

p_A_L_11
p_A_R_11

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_11 <- bm_A_11[bm_A_11$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_11 <- bm_A_11[bm_A_11$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_11 <- sub(",", "", total_ev_O_A_11) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_11 <- sub(",", "", total_ev_I_A_11)

total_ev_A_11 = sum(as.integer(total_ev_O_A_11), as.integer(total_ev_I_A_11)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_11 <- bm_A_11[bm_A_11$투표구명 == "관외사전투표" ,3]
ev_I_A_L_11 <- bm_A_11[bm_A_11$투표구명 == "관내사전투표",3]

ev_O_A_L_11 <- sub(",", "", ev_O_A_L_11)
ev_I_A_L_11 <- sub(",", "", ev_I_A_L_11)

ev_A_L_11 <- sum(as.integer(ev_O_A_L_11), as.integer(ev_I_A_L_11))

ev_A_L_11
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_11 <- bm_A_11[bm_A_11$투표구명 == "관외사전투표" ,4]
ev_I_A_R_11 <- bm_A_11[bm_A_11$투표구명 == "관내사전투표",4]

ev_O_A_R_11 <- sub(",", "", ev_O_A_R_11)
ev_I_A_R_11 <- sub(",", "", ev_I_A_R_11)

ev_A_R_11 <- sum(as.integer(ev_O_A_R_11), as.integer(ev_I_A_R_11))

ev_A_R_11


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_11 <- ev_A_L_11/total_ev_A_11
srp_A_L_11

dp_A_L_11 <- (srp_A_L_11)*(1-srp_A_L_11)/total_ev_A_11
dp_A_L_11

sdp_A_L_11 <- sqrt(dp_A_L_11)
sdp_A_L_11


# 우파 사전투표 비율

srp_A_R_11 <- ev_A_R_11/total_ev_A_11
srp_A_R_11

dp_A_R_11 <- (srp_A_R_11)*(1-srp_A_R_11)/total_ev_A_11
dp_A_R_11

sdp_A_R_11 <- sqrt(dp_A_R_11)
sdp_A_R_11

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_11-2.58*sdp_A_L_11, '<= p <=', srp_A_L_11+2.58*sdp_A_L_11)

if(p_A_L_11 >= srp_A_L_11-2.58*sdp_A_L_11 && p_A_L_11 <= srp_A_L_11+2.58*sdp_A_L_11){
  k_A_L_11 = abs(p_A_L_11-srp_A_L_11) / sdp_A_L_11
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_11 = abs(p_A_L_11-srp_A_L_11) / sdp_A_L_11
  cat("k값이", k_A_L_11, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_11-2.58*sdp_A_R_11, '<= p <=', srp_A_R_11+2.58*sdp_A_R_11)

if(p_A_R_11 >= srp_A_R_11-2.58*sdp_A_R_11 && p_A_R_11 <= srp_A_R_11+2.58*sdp_A_R_11){
  k_A_R_11 = abs(p_A_R_11-srp_A_R_11) / sdp_A_R_11
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_11 = abs(p_A_R_11-srp_A_R_11) / sdp_A_R_11
  cat("k값이", k_A_R_11, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_11
k_A_R_11
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_11 <- c(0)
kA_A_R_11 <- c(0)

if(k_A_L_11> 34.36129){
  kA_A_L_11 = 1  
}else if(k_A_R_11> 34.36129){
  kA_A_R_11 = 1
}else{
  kA_A_L_11 = 0
  kA_A_R_11 = 0
}

kA_A_L_11
kA_A_R_11


#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 12. 은평구 ###################################################
######################################## 갑 A ########################################################


bm_A_12 <- csv_12[c(5:77),c(2:6)] # 필요한 행과 열만 추출

bm_A_12 <- bm_A_12[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_12) <- c("투표구명", "투표수", "박주민(좌파)", "홍인정(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_12 <- bm_A_12[bm_A_12$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_12 <- sub(",", "", total_A_12)
total_A_12 <- as.integer(total_A_12)              # total_A_01 : 전체 투표수

total_A_L_12 <- bm_A_12[bm_A_12$투표구명 == "계", 3]
total_A_L_12 <- sub(",", "", total_A_L_12)
total_A_L_12 <- as.integer(total_A_L_12)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_12 <- bm_A_12[bm_A_12$투표구명 == "계", 4]
total_A_R_12 <- sub(",", "", total_A_R_12)
total_A_R_12 <- as.integer(total_A_R_12)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_12 <- total_A_L_12/total_A_12 # 좌파의 본투표비율
p_A_R_12 <- total_A_R_12/total_A_12 # 우파의 본투표비율

p_A_L_12
p_A_R_12

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_12 <- bm_A_12[bm_A_12$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_12 <- bm_A_12[bm_A_12$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_12 <- sub(",", "", total_ev_O_A_12) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_12 <- sub(",", "", total_ev_I_A_12)

total_ev_A_12 = sum(as.integer(total_ev_O_A_12), as.integer(total_ev_I_A_12)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_12 <- bm_A_12[bm_A_12$투표구명 == "관외사전투표" ,3]
ev_I_A_L_12 <- bm_A_12[bm_A_12$투표구명 == "관내사전투표",3]

ev_O_A_L_12 <- sub(",", "", ev_O_A_L_12)
ev_I_A_L_12 <- sub(",", "", ev_I_A_L_12)

ev_A_L_12 <- sum(as.integer(ev_O_A_L_12), as.integer(ev_I_A_L_12))

ev_A_L_12
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_12 <- bm_A_12[bm_A_12$투표구명 == "관외사전투표" ,4]
ev_I_A_R_12 <- bm_A_12[bm_A_12$투표구명 == "관내사전투표",4]

ev_O_A_R_12 <- sub(",", "", ev_O_A_R_12)
ev_I_A_R_12 <- sub(",", "", ev_I_A_R_12)

ev_A_R_12 <- sum(as.integer(ev_O_A_R_12), as.integer(ev_I_A_R_12))

ev_A_R_12


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_12 <- ev_A_L_12/total_ev_A_12
srp_A_L_12

dp_A_L_12 <- (srp_A_L_12)*(1-srp_A_L_12)/total_ev_A_12
dp_A_L_12

sdp_A_L_12 <- sqrt(dp_A_L_12)
sdp_A_L_12


# 우파 사전투표 비율

srp_A_R_12 <- ev_A_R_12/total_ev_A_12
srp_A_R_12

dp_A_R_12 <- (srp_A_R_12)*(1-srp_A_R_12)/total_ev_A_12
dp_A_R_12

sdp_A_R_12 <- sqrt(dp_A_R_12)
sdp_A_R_12

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_12-2.58*sdp_A_L_12, '<= p <=', srp_A_L_12+2.58*sdp_A_L_12)

if(p_A_L_12 >= srp_A_L_12-2.58*sdp_A_L_12 && p_A_L_12 <= srp_A_L_12+2.58*sdp_A_L_12){
  k_A_L_12 = abs(p_A_L_12-srp_A_L_12) / sdp_A_L_12
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_12 = abs(p_A_L_12-srp_A_L_12) / sdp_A_L_12
  cat("k값이", k_A_L_12, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_12-2.58*sdp_A_R_12, '<= p <=', srp_A_R_12+2.58*sdp_A_R_12)

if(p_A_R_12 >= srp_A_R_12-2.58*sdp_A_R_12 && p_A_R_12 <= srp_A_R_12+2.58*sdp_A_R_12){
  k_A_R_12 = abs(p_A_R_12-srp_A_R_12) / sdp_A_R_12
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_12 = abs(p_A_R_12-srp_A_R_12) / sdp_A_R_12
  cat("k값이", k_A_R_12, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_12
k_A_R_12
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_12 <- c(0)
kA_A_R_12 <- c(0)

if(k_A_L_12> 34.36129){
  kA_A_L_12 = 1  
}else if(k_A_R_12> 34.36129){
  kA_A_R_12 = 1
}else{
  kA_A_L_12 = 0
  kA_A_R_12 = 0
}

kA_A_L_12
kA_A_R_12



#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 13. 서대문구 ###################################################
######################################## 갑 A ########################################################


bm_A_13 <- csv_13[c(5:63),c(2:6)] # 필요한 행과 열만 추출

bm_A_13 <- bm_A_13[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_13) <- c("투표구명", "투표수", "우상호(좌파)", "이성헌(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_13 <- bm_A_13[bm_A_13$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_13 <- sub(",", "", total_A_13)
total_A_13 <- as.integer(total_A_13)              # total_A_01 : 전체 투표수

total_A_L_13 <- bm_A_13[bm_A_13$투표구명 == "계", 3]
total_A_L_13 <- sub(",", "", total_A_L_13)
total_A_L_13 <- as.integer(total_A_L_13)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_13 <- bm_A_13[bm_A_13$투표구명 == "계", 4]
total_A_R_13 <- sub(",", "", total_A_R_13)
total_A_R_13 <- as.integer(total_A_R_13)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_13 <- total_A_L_13/total_A_13 # 좌파의 본투표비율
p_A_R_13 <- total_A_R_13/total_A_13 # 우파의 본투표비율

p_A_L_13
p_A_R_13

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_13 <- bm_A_13[bm_A_13$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_13 <- bm_A_13[bm_A_13$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_13 <- sub(",", "", total_ev_O_A_13) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_13 <- sub(",", "", total_ev_I_A_13)

total_ev_A_13 = sum(as.integer(total_ev_O_A_13), as.integer(total_ev_I_A_13)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_13 <- bm_A_13[bm_A_13$투표구명 == "관외사전투표" ,3]
ev_I_A_L_13 <- bm_A_13[bm_A_13$투표구명 == "관내사전투표",3]

ev_O_A_L_13 <- sub(",", "", ev_O_A_L_13)
ev_I_A_L_13 <- sub(",", "", ev_I_A_L_13)

ev_A_L_13 <- sum(as.integer(ev_O_A_L_13), as.integer(ev_I_A_L_13))

ev_A_L_13
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_13 <- bm_A_13[bm_A_13$투표구명 == "관외사전투표" ,4]
ev_I_A_R_13 <- bm_A_13[bm_A_13$투표구명 == "관내사전투표",4]

ev_O_A_R_13 <- sub(",", "", ev_O_A_R_13)
ev_I_A_R_13 <- sub(",", "", ev_I_A_R_13)

ev_A_R_13 <- sum(as.integer(ev_O_A_R_13), as.integer(ev_I_A_R_13))

ev_A_R_13


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_13 <- ev_A_L_13/total_ev_A_13
srp_A_L_13

dp_A_L_13 <- (srp_A_L_13)*(1-srp_A_L_13)/total_ev_A_13
dp_A_L_13

sdp_A_L_13 <- sqrt(dp_A_L_13)
sdp_A_L_13


# 우파 사전투표 비율

srp_A_R_13 <- ev_A_R_13/total_ev_A_13
srp_A_R_13

dp_A_R_13 <- (srp_A_R_13)*(1-srp_A_R_13)/total_ev_A_13
dp_A_R_13

sdp_A_R_13 <- sqrt(dp_A_R_13)
sdp_A_R_13

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_13-2.58*sdp_A_L_13, '<= p <=', srp_A_L_13+2.58*sdp_A_L_13)

if(p_A_L_13 >= srp_A_L_13-2.58*sdp_A_L_13 && p_A_L_13 <= srp_A_L_13+2.58*sdp_A_L_13){
  k_A_L_13 = abs(p_A_L_13-srp_A_L_13) / sdp_A_L_13
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_13 = abs(p_A_L_13-srp_A_L_13) / sdp_A_L_13
  cat("k값이", k_A_L_13, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_13-2.58*sdp_A_R_13, '<= p <=', srp_A_R_13+2.58*sdp_A_R_13)

if(p_A_R_13 >= srp_A_R_13-2.58*sdp_A_R_13 && p_A_R_13 <= srp_A_R_13+2.58*sdp_A_R_13){
  k_A_R_13 = abs(p_A_R_13-srp_A_R_13) / sdp_A_R_13
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_13 = abs(p_A_R_13-srp_A_R_13) / sdp_A_R_13
  cat("k값이", k_A_R_13, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_13
k_A_R_13
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_13 <- c(0)
kA_A_R_13 <- c(0)

if(k_A_L_13> 34.36129){
  kA_A_L_13 = 1  
}else if(k_A_R_13> 34.36129){
  kA_A_R_13 = 1
}else{
  kA_A_L_13 = 0
  kA_A_R_13 = 0
}

kA_A_L_13
kA_A_R_13



#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 14. 마포구 ###################################################
######################################## 갑 A ########################################################


bm_A_14 <- csv_14[c(5:64),c(2:6)] # 필요한 행과 열만 추출

bm_A_14 <- bm_A_14[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_14) <- c("투표구명", "투표수", "노웅래(좌파)", "강승규(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_14 <- bm_A_14[bm_A_14$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_14 <- sub(",", "", total_A_14)
total_A_14 <- as.integer(total_A_14)              # total_A_01 : 전체 투표수

total_A_L_14 <- bm_A_14[bm_A_14$투표구명 == "계", 3]
total_A_L_14 <- sub(",", "", total_A_L_14)
total_A_L_14 <- as.integer(total_A_L_14)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_14 <- bm_A_14[bm_A_14$투표구명 == "계", 4]
total_A_R_14 <- sub(",", "", total_A_R_14)
total_A_R_14 <- as.integer(total_A_R_14)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_14 <- total_A_L_14/total_A_14 # 좌파의 본투표비율
p_A_R_14 <- total_A_R_14/total_A_14 # 우파의 본투표비율

p_A_L_14
p_A_R_14

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_14 <- bm_A_14[bm_A_14$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_14 <- bm_A_14[bm_A_14$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_14 <- sub(",", "", total_ev_O_A_14) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_14 <- sub(",", "", total_ev_I_A_14)

total_ev_A_14 = sum(as.integer(total_ev_O_A_14), as.integer(total_ev_I_A_14)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_14 <- bm_A_14[bm_A_14$투표구명 == "관외사전투표" ,3]
ev_I_A_L_14 <- bm_A_14[bm_A_14$투표구명 == "관내사전투표",3]

ev_O_A_L_14 <- sub(",", "", ev_O_A_L_14)
ev_I_A_L_14 <- sub(",", "", ev_I_A_L_14)

ev_A_L_14 <- sum(as.integer(ev_O_A_L_14), as.integer(ev_I_A_L_14))

ev_A_L_14
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_14 <- bm_A_14[bm_A_14$투표구명 == "관외사전투표" ,4]
ev_I_A_R_14 <- bm_A_14[bm_A_14$투표구명 == "관내사전투표",4]

ev_O_A_R_14 <- sub(",", "", ev_O_A_R_14)
ev_I_A_R_14 <- sub(",", "", ev_I_A_R_14)

ev_A_R_14 <- sum(as.integer(ev_O_A_R_14), as.integer(ev_I_A_R_14))

ev_A_R_14


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_14 <- ev_A_L_14/total_ev_A_14
srp_A_L_14

dp_A_L_14 <- (srp_A_L_14)*(1-srp_A_L_14)/total_ev_A_14
dp_A_L_14

sdp_A_L_14 <- sqrt(dp_A_L_14)
sdp_A_L_14


# 우파 사전투표 비율

srp_A_R_14 <- ev_A_R_14/total_ev_A_14
srp_A_R_14

dp_A_R_14 <- (srp_A_R_14)*(1-srp_A_R_14)/total_ev_A_14
dp_A_R_14

sdp_A_R_14 <- sqrt(dp_A_R_14)
sdp_A_R_14

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_14-2.58*sdp_A_L_14, '<= p <=', srp_A_L_14+2.58*sdp_A_L_14)

if(p_A_L_14 >= srp_A_L_14-2.58*sdp_A_L_14 && p_A_L_14 <= srp_A_L_14+2.58*sdp_A_L_14){
  k_A_L_14 = abs(p_A_L_14-srp_A_L_14) / sdp_A_L_14
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_14 = abs(p_A_L_14-srp_A_L_14) / sdp_A_L_14
  cat("k값이", k_A_L_14, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_14-2.58*sdp_A_R_14, '<= p <=', srp_A_R_14+2.58*sdp_A_R_14)

if(p_A_R_14 >= srp_A_R_14-2.58*sdp_A_R_14 && p_A_R_14 <= srp_A_R_14+2.58*sdp_A_R_14){
  k_A_R_14 = abs(p_A_R_14-srp_A_R_14) / sdp_A_R_14
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_14 = abs(p_A_R_14-srp_A_R_14) / sdp_A_R_14
  cat("k값이", k_A_R_14, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_14
k_A_R_14
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_14 <- c(0)
kA_A_R_14 <- c(0)

if(k_A_L_14> 34.36129){
  kA_A_L_14 = 1  
}else if(k_A_R_14> 34.36129){
  kA_A_R_14 = 1
}else{
  kA_A_L_14 = 0
  kA_A_R_14 = 0
}

kA_A_L_14
kA_A_R_14




#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 15. 양천구 ###################################################
######################################## 갑 A ########################################################


bm_A_15 <- csv_15[c(5:85),c(2:6)] # 필요한 행과 열만 추출

bm_A_15 <- bm_A_15[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_15) <- c("투표구명", "투표수", "황희(좌파)", "송한섭(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_15 <- bm_A_15[bm_A_15$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_15 <- sub(",", "", total_A_15)
total_A_15 <- as.integer(total_A_15)              # total_A_01 : 전체 투표수

total_A_L_15 <- bm_A_15[bm_A_15$투표구명 == "계", 3]
total_A_L_15 <- sub(",", "", total_A_L_15)
total_A_L_15 <- as.integer(total_A_L_15)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_15 <- bm_A_15[bm_A_15$투표구명 == "계", 4]
total_A_R_15 <- sub(",", "", total_A_R_15)
total_A_R_15 <- as.integer(total_A_R_15)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_15 <- total_A_L_15/total_A_15 # 좌파의 본투표비율
p_A_R_15 <- total_A_R_15/total_A_15 # 우파의 본투표비율

p_A_L_15
p_A_R_15

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_15 <- bm_A_15[bm_A_15$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_15 <- bm_A_15[bm_A_15$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_15 <- sub(",", "", total_ev_O_A_15) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_15 <- sub(",", "", total_ev_I_A_15)

total_ev_A_15 = sum(as.integer(total_ev_O_A_15), as.integer(total_ev_I_A_15)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_15 <- bm_A_15[bm_A_15$투표구명 == "관외사전투표" ,3]
ev_I_A_L_15 <- bm_A_15[bm_A_15$투표구명 == "관내사전투표",3]

ev_O_A_L_15 <- sub(",", "", ev_O_A_L_15)
ev_I_A_L_15 <- sub(",", "", ev_I_A_L_15)

ev_A_L_15 <- sum(as.integer(ev_O_A_L_15), as.integer(ev_I_A_L_15))

ev_A_L_15
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_15 <- bm_A_15[bm_A_15$투표구명 == "관외사전투표" ,4]
ev_I_A_R_15 <- bm_A_15[bm_A_15$투표구명 == "관내사전투표",4]

ev_O_A_R_15 <- sub(",", "", ev_O_A_R_15)
ev_I_A_R_15 <- sub(",", "", ev_I_A_R_15)

ev_A_R_15 <- sum(as.integer(ev_O_A_R_15), as.integer(ev_I_A_R_15))

ev_A_R_15


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_15 <- ev_A_L_15/total_ev_A_15
srp_A_L_15

dp_A_L_15 <- (srp_A_L_15)*(1-srp_A_L_15)/total_ev_A_15
dp_A_L_15

sdp_A_L_15 <- sqrt(dp_A_L_15)
sdp_A_L_15


# 우파 사전투표 비율

srp_A_R_15 <- ev_A_R_15/total_ev_A_15
srp_A_R_15

dp_A_R_15 <- (srp_A_R_15)*(1-srp_A_R_15)/total_ev_A_15
dp_A_R_15

sdp_A_R_15 <- sqrt(dp_A_R_15)
sdp_A_R_15

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_15-2.58*sdp_A_L_15, '<= p <=', srp_A_L_15+2.58*sdp_A_L_15)

if(p_A_L_15 >= srp_A_L_15-2.58*sdp_A_L_15 && p_A_L_15 <= srp_A_L_15+2.58*sdp_A_L_15){
  k_A_L_15 = abs(p_A_L_15-srp_A_L_15) / sdp_A_L_15
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_15 = abs(p_A_L_15-srp_A_L_15) / sdp_A_L_15
  cat("k값이", k_A_L_15, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_15-2.58*sdp_A_R_15, '<= p <=', srp_A_R_15+2.58*sdp_A_R_15)

if(p_A_R_15 >= srp_A_R_15-2.58*sdp_A_R_15 && p_A_R_15 <= srp_A_R_15+2.58*sdp_A_R_15){
  k_A_R_15 = abs(p_A_R_15-srp_A_R_15) / sdp_A_R_15
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_15 = abs(p_A_R_15-srp_A_R_15) / sdp_A_R_15
  cat("k값이", k_A_R_15, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_15
k_A_R_15
##########################################################################
# k(or z) 이상치값 추출
kA_A_L_15 <- c(0)
kA_A_R_15 <- c(0)


if(k_A_L_15> 34.36129){
  kA_A_L_15 = 1  
}else if(k_A_R_15> 34.36129){
  kA_A_R_15 = 1
}else{
  kA_A_L_15 = 0
  kA_A_R_15 = 0
}

kA_A_L_15
kA_A_R_15



#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 16. 강서구 ###################################################
######################################## 갑 A ########################################################


bm_A_16 <- csv_16[c(5:62),c(2:6)] # 필요한 행과 열만 추출

bm_A_16 <- bm_A_16[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_16) <- c("투표구명", "투표수", "강선우(좌파)", "구상찬(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_16 <- bm_A_16[bm_A_16$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_16 <- sub(",", "", total_A_16)
total_A_16 <- as.integer(total_A_16)              # total_A_01 : 전체 투표수

total_A_L_16 <- bm_A_16[bm_A_16$투표구명 == "계", 3]
total_A_L_16 <- sub(",", "", total_A_L_16)
total_A_L_16 <- as.integer(total_A_L_16)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_16 <- bm_A_16[bm_A_16$투표구명 == "계", 4]
total_A_R_16 <- sub(",", "", total_A_R_16)
total_A_R_16 <- as.integer(total_A_R_16)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_16 <- total_A_L_16/total_A_16 # 좌파의 본투표비율
p_A_R_16 <- total_A_R_16/total_A_16 # 우파의 본투표비율

p_A_L_16
p_A_R_16

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_16 <- bm_A_16[bm_A_16$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_16 <- bm_A_16[bm_A_16$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_16 <- sub(",", "", total_ev_O_A_16) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_16 <- sub(",", "", total_ev_I_A_16)

total_ev_A_16 = sum(as.integer(total_ev_O_A_16), as.integer(total_ev_I_A_16)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_16 <- bm_A_16[bm_A_16$투표구명 == "관외사전투표" ,3]
ev_I_A_L_16 <- bm_A_16[bm_A_16$투표구명 == "관내사전투표",3]

ev_O_A_L_16 <- sub(",", "", ev_O_A_L_16)
ev_I_A_L_16 <- sub(",", "", ev_I_A_L_16)

ev_A_L_16 <- sum(as.integer(ev_O_A_L_16), as.integer(ev_I_A_L_16))

ev_A_L_16
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_16 <- bm_A_16[bm_A_16$투표구명 == "관외사전투표" ,4]
ev_I_A_R_16 <- bm_A_16[bm_A_16$투표구명 == "관내사전투표",4]

ev_O_A_R_16 <- sub(",", "", ev_O_A_R_16)
ev_I_A_R_16 <- sub(",", "", ev_I_A_R_16)

ev_A_R_16 <- sum(as.integer(ev_O_A_R_16), as.integer(ev_I_A_R_16))

ev_A_R_16


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_16 <- ev_A_L_16/total_ev_A_16
srp_A_L_16

dp_A_L_16 <- (srp_A_L_16)*(1-srp_A_L_16)/total_ev_A_16
dp_A_L_16

sdp_A_L_16 <- sqrt(dp_A_L_16)
sdp_A_L_16


# 우파 사전투표 비율

srp_A_R_16 <- ev_A_R_16/total_ev_A_16
srp_A_R_16

dp_A_R_16 <- (srp_A_R_16)*(1-srp_A_R_16)/total_ev_A_16
dp_A_R_16

sdp_A_R_16 <- sqrt(dp_A_R_16)
sdp_A_R_16

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_16-2.58*sdp_A_L_16, '<= p <=', srp_A_L_16+2.58*sdp_A_L_16)

if(p_A_L_16 >= srp_A_L_16-2.58*sdp_A_L_16 && p_A_L_16 <= srp_A_L_16+2.58*sdp_A_L_16){
  k_A_L_16 = abs(p_A_L_16-srp_A_L_16) / sdp_A_L_16
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_16 = abs(p_A_L_16-srp_A_L_16) / sdp_A_L_16
  cat("k값이", k_A_L_16, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_16-2.58*sdp_A_R_16, '<= p <=', srp_A_R_16+2.58*sdp_A_R_16)

if(p_A_R_16 >= srp_A_R_16-2.58*sdp_A_R_16 && p_A_R_16 <= srp_A_R_16+2.58*sdp_A_R_16){
  k_A_R_16 = abs(p_A_R_16-srp_A_R_16) / sdp_A_R_16
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_16 = abs(p_A_R_16-srp_A_R_16) / sdp_A_R_16
  cat("k값이", k_A_R_16, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_16
k_A_R_16
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_16 <- c(0)
kA_A_R_16 <- c(0)


if(k_A_L_16> 34.36129){
  kA_A_L_16 = 1  
}else if(k_A_R_16> 34.36129){
  kA_A_R_16 = 1
}else{
  kA_A_L_16 = 0
  kA_A_R_16 = 0
}

kA_A_L_16
kA_A_R_16



#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 17. 구로구 ###################################################
######################################## 갑 A ########################################################


bm_A_17 <- csv_17[c(5:83),c(2:6)] # 필요한 행과 열만 추출

bm_A_17 <- bm_A_17[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_17) <- c("투표구명", "투표수", "이인영(좌파)", "김재식(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_17 <- bm_A_17[bm_A_17$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_17 <- sub(",", "", total_A_17)
total_A_17 <- as.integer(total_A_17)              # total_A_01 : 전체 투표수

total_A_L_17 <- bm_A_17[bm_A_17$투표구명 == "계", 3]
total_A_L_17 <- sub(",", "", total_A_L_17)
total_A_L_17 <- as.integer(total_A_L_17)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_17 <- bm_A_17[bm_A_17$투표구명 == "계", 4]
total_A_R_17 <- sub(",", "", total_A_R_17)
total_A_R_17 <- as.integer(total_A_R_17)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_17 <- total_A_L_17/total_A_17 # 좌파의 본투표비율
p_A_R_17 <- total_A_R_17/total_A_17 # 우파의 본투표비율

p_A_L_17
p_A_R_17

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_17 <- bm_A_17[bm_A_17$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_17 <- bm_A_17[bm_A_17$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_17 <- sub(",", "", total_ev_O_A_17) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_17 <- sub(",", "", total_ev_I_A_17)

total_ev_A_17 = sum(as.integer(total_ev_O_A_17), as.integer(total_ev_I_A_17)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_17 <- bm_A_17[bm_A_17$투표구명 == "관외사전투표" ,3]
ev_I_A_L_17 <- bm_A_17[bm_A_17$투표구명 == "관내사전투표",3]

ev_O_A_L_17 <- sub(",", "", ev_O_A_L_17)
ev_I_A_L_17 <- sub(",", "", ev_I_A_L_17)

ev_A_L_17 <- sum(as.integer(ev_O_A_L_17), as.integer(ev_I_A_L_17))

ev_A_L_17
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_17 <- bm_A_17[bm_A_17$투표구명 == "관외사전투표" ,4]
ev_I_A_R_17 <- bm_A_17[bm_A_17$투표구명 == "관내사전투표",4]

ev_O_A_R_17 <- sub(",", "", ev_O_A_R_17)
ev_I_A_R_17 <- sub(",", "", ev_I_A_R_17)

ev_A_R_17 <- sum(as.integer(ev_O_A_R_17), as.integer(ev_I_A_R_17))

ev_A_R_17


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_17 <- ev_A_L_17/total_ev_A_17
srp_A_L_17

dp_A_L_17 <- (srp_A_L_17)*(1-srp_A_L_17)/total_ev_A_17
dp_A_L_17

sdp_A_L_17 <- sqrt(dp_A_L_17)
sdp_A_L_17


# 우파 사전투표 비율

srp_A_R_17 <- ev_A_R_17/total_ev_A_17
srp_A_R_17

dp_A_R_17 <- (srp_A_R_17)*(1-srp_A_R_17)/total_ev_A_17
dp_A_R_17

sdp_A_R_17 <- sqrt(dp_A_R_17)
sdp_A_R_17

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_17-2.58*sdp_A_L_17, '<= p <=', srp_A_L_17+2.58*sdp_A_L_17)

if(p_A_L_17 >= srp_A_L_17-2.58*sdp_A_L_17 && p_A_L_17 <= srp_A_L_17+2.58*sdp_A_L_17){
  k_A_L_17 = abs(p_A_L_17-srp_A_L_17) / sdp_A_L_17
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_17 = abs(p_A_L_17-srp_A_L_17) / sdp_A_L_17
  cat("k값이", k_A_L_17, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_17-2.58*sdp_A_R_17, '<= p <=', srp_A_R_17+2.58*sdp_A_R_17)

if(p_A_R_17 >= srp_A_R_17-2.58*sdp_A_R_17 && p_A_R_17 <= srp_A_R_17+2.58*sdp_A_R_17){
  k_A_R_17 = abs(p_A_R_17-srp_A_R_17) / sdp_A_R_17
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_17 = abs(p_A_R_17-srp_A_R_17) / sdp_A_R_17
  cat("k값이", k_A_R_17, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_17
k_A_R_17
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_17 <- c(0)
kA_A_R_17 <- c(0)


if(k_A_L_17> 34.36129){
  kA_A_L_17 = 1  
}else if(k_A_R_17> 34.36129){
  kA_A_R_17 = 1
}else{
  kA_A_L_17 = 0
  kA_A_R_17 = 0
}

kA_A_L_17
kA_A_R_17



#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 18. 금천구 ###################################################


bm_A_18 <- csv_18[c(5:89),c(2:6)] # 필요한 행과 열만 추출

bm_A_18 <- bm_A_18[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_18) <- c("투표구명", "투표수", "최기상(좌파)", "강성만(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_18 <- bm_A_18[bm_A_18$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_18 <- sub(",", "", total_A_18)
total_A_18 <- as.integer(total_A_18)              # total_A_01 : 전체 투표수

total_A_L_18 <- bm_A_18[bm_A_18$투표구명 == "계", 3]
total_A_L_18 <- sub(",", "", total_A_L_18)
total_A_L_18 <- as.integer(total_A_L_18)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_18 <- bm_A_18[bm_A_18$투표구명 == "계", 4]
total_A_R_18 <- sub(",", "", total_A_R_18)
total_A_R_18 <- as.integer(total_A_R_18)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_18 <- total_A_L_18/total_A_18 # 좌파의 본투표비율
p_A_R_18 <- total_A_R_18/total_A_18 # 우파의 본투표비율

p_A_L_18
p_A_R_18

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_18 <- bm_A_18[bm_A_18$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_18 <- bm_A_18[bm_A_18$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_18 <- sub(",", "", total_ev_O_A_18) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_18 <- sub(",", "", total_ev_I_A_18)

total_ev_A_18 = sum(as.integer(total_ev_O_A_18), as.integer(total_ev_I_A_18)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_18 <- bm_A_18[bm_A_18$투표구명 == "관외사전투표" ,3]
ev_I_A_L_18 <- bm_A_18[bm_A_18$투표구명 == "관내사전투표",3]

ev_O_A_L_18 <- sub(",", "", ev_O_A_L_18)
ev_I_A_L_18 <- sub(",", "", ev_I_A_L_18)

ev_A_L_18 <- sum(as.integer(ev_O_A_L_18), as.integer(ev_I_A_L_18))

ev_A_L_18
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_18 <- bm_A_18[bm_A_18$투표구명 == "관외사전투표" ,4]
ev_I_A_R_18 <- bm_A_18[bm_A_18$투표구명 == "관내사전투표",4]

ev_O_A_R_18 <- sub(",", "", ev_O_A_R_18)
ev_I_A_R_18 <- sub(",", "", ev_I_A_R_18)

ev_A_R_18 <- sum(as.integer(ev_O_A_R_18), as.integer(ev_I_A_R_18))

ev_A_R_18


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_18 <- ev_A_L_18/total_ev_A_18
srp_A_L_18

dp_A_L_18 <- (srp_A_L_18)*(1-srp_A_L_18)/total_ev_A_18
dp_A_L_18

sdp_A_L_18 <- sqrt(dp_A_L_18)
sdp_A_L_18


# 우파 사전투표 비율

srp_A_R_18 <- ev_A_R_18/total_ev_A_18
srp_A_R_18

dp_A_R_18 <- (srp_A_R_18)*(1-srp_A_R_18)/total_ev_A_18
dp_A_R_18

sdp_A_R_18 <- sqrt(dp_A_R_18)
sdp_A_R_18

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_18-2.58*sdp_A_L_18, '<= p <=', srp_A_L_18+2.58*sdp_A_L_18)

if(p_A_L_18 >= srp_A_L_18-2.58*sdp_A_L_18 && p_A_L_18 <= srp_A_L_18+2.58*sdp_A_L_18){
  k_A_L_18 = abs(p_A_L_18-srp_A_L_18) / sdp_A_L_18
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_18 = abs(p_A_L_18-srp_A_L_18) / sdp_A_L_18
  cat("k값이", k_A_L_18, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_18-2.58*sdp_A_R_18, '<= p <=', srp_A_R_18+2.58*sdp_A_R_18)

if(p_A_R_18 >= srp_A_R_18-2.58*sdp_A_R_18 && p_A_R_18 <= srp_A_R_18+2.58*sdp_A_R_18){
  k_A_R_18 = abs(p_A_R_18-srp_A_R_18) / sdp_A_R_18
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_18 = abs(p_A_R_18-srp_A_R_18) / sdp_A_R_18
  cat("k값이", k_A_R_18, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_18
k_A_R_18
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_18 <- c(0)
kA_A_R_18 <- c(0)


if(k_A_L_18> 34.36129){
  kA_A_L_18 = 1  
}else if(k_A_R_18> 34.36129){
  kA_A_R_18 = 1
}else{
  kA_A_L_18 = 0
  kA_A_R_18 = 0
}

kA_A_L_18
kA_A_R_18



#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 19. 영등포구 ###################################################
######################################## 갑 A ########################################################


bm_A_19 <- csv_19[c(5:78),c(2:6)] # 필요한 행과 열만 추출

bm_A_19 <- bm_A_19[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_19) <- c("투표구명", "투표수", "김영주(좌파)", "문병호(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_19 <- bm_A_19[bm_A_19$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_19 <- sub(",", "", total_A_19)
total_A_19 <- as.integer(total_A_19)              # total_A_01 : 전체 투표수

total_A_L_19 <- bm_A_19[bm_A_19$투표구명 == "계", 3]
total_A_L_19 <- sub(",", "", total_A_L_19)
total_A_L_19 <- as.integer(total_A_L_19)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_19 <- bm_A_19[bm_A_19$투표구명 == "계", 4]
total_A_R_19 <- sub(",", "", total_A_R_19)
total_A_R_19 <- as.integer(total_A_R_19)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_19 <- total_A_L_19/total_A_19 # 좌파의 본투표비율
p_A_R_19 <- total_A_R_19/total_A_19 # 우파의 본투표비율

p_A_L_19
p_A_R_19

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_19 <- bm_A_19[bm_A_19$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_19 <- bm_A_19[bm_A_19$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_19 <- sub(",", "", total_ev_O_A_19) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_19 <- sub(",", "", total_ev_I_A_19)

total_ev_A_19 = sum(as.integer(total_ev_O_A_19), as.integer(total_ev_I_A_19)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_19 <- bm_A_19[bm_A_19$투표구명 == "관외사전투표" ,3]
ev_I_A_L_19 <- bm_A_19[bm_A_19$투표구명 == "관내사전투표",3]

ev_O_A_L_19 <- sub(",", "", ev_O_A_L_19)
ev_I_A_L_19 <- sub(",", "", ev_I_A_L_19)

ev_A_L_19 <- sum(as.integer(ev_O_A_L_19), as.integer(ev_I_A_L_19))

ev_A_L_19
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_19 <- bm_A_19[bm_A_19$투표구명 == "관외사전투표" ,4]
ev_I_A_R_19 <- bm_A_19[bm_A_19$투표구명 == "관내사전투표",4]

ev_O_A_R_19 <- sub(",", "", ev_O_A_R_19)
ev_I_A_R_19 <- sub(",", "", ev_I_A_R_19)

ev_A_R_19 <- sum(as.integer(ev_O_A_R_19), as.integer(ev_I_A_R_19))

ev_A_R_19


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_19 <- ev_A_L_19/total_ev_A_19
srp_A_L_19

dp_A_L_19 <- (srp_A_L_19)*(1-srp_A_L_19)/total_ev_A_19
dp_A_L_19

sdp_A_L_19 <- sqrt(dp_A_L_19)
sdp_A_L_19


# 우파 사전투표 비율

srp_A_R_19 <- ev_A_R_19/total_ev_A_19
srp_A_R_19

dp_A_R_19 <- (srp_A_R_19)*(1-srp_A_R_19)/total_ev_A_19
dp_A_R_19

sdp_A_R_19 <- sqrt(dp_A_R_19)
sdp_A_R_19

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_19-2.58*sdp_A_L_19, '<= p <=', srp_A_L_19+2.58*sdp_A_L_19)

if(p_A_L_19 >= srp_A_L_19-2.58*sdp_A_L_19 && p_A_L_19 <= srp_A_L_19+2.58*sdp_A_L_19){
  k_A_L_19 = abs(p_A_L_19-srp_A_L_19) / sdp_A_L_19
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_19 = abs(p_A_L_19-srp_A_L_19) / sdp_A_L_19
  cat("k값이", k_A_L_19, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_19-2.58*sdp_A_R_19, '<= p <=', srp_A_R_19+2.58*sdp_A_R_19)

if(p_A_R_19 >= srp_A_R_19-2.58*sdp_A_R_19 && p_A_R_19 <= srp_A_R_19+2.58*sdp_A_R_19){
  k_A_R_19 = abs(p_A_R_19-srp_A_R_19) / sdp_A_R_19
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_19 = abs(p_A_R_19-srp_A_R_19) / sdp_A_R_19
  cat("k값이", k_A_R_19, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_19
k_A_R_19
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_19 <- c(0)
kA_A_R_19 <- c(0)


if(k_A_L_19> 34.36129){
  kA_A_L_19 = 1  
}else if(k_A_R_19> 34.36129){
  kA_A_R_19 = 1
}else{
  kA_A_L_19 = 0
  kA_A_R_19 = 0
}

kA_A_L_19
kA_A_R_19



#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 20. 동작구 ###################################################
######################################## 갑 A ########################################################


bm_A_20 <- csv_20[c(5:72),c(2:6)] # 필요한 행과 열만 추출

bm_A_20 <- bm_A_20[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_20) <- c("투표구명", "투표수", "김병기(좌파)", "장진영(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_20 <- bm_A_20[bm_A_20$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_20 <- sub(",", "", total_A_20)
total_A_20 <- as.integer(total_A_20)              # total_A_01 : 전체 투표수

total_A_L_20 <- bm_A_20[bm_A_20$투표구명 == "계", 3]
total_A_L_20 <- sub(",", "", total_A_L_20)
total_A_L_20 <- as.integer(total_A_L_20)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_20 <- bm_A_20[bm_A_20$투표구명 == "계", 4]
total_A_R_20 <- sub(",", "", total_A_R_20)
total_A_R_20 <- as.integer(total_A_R_20)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_20 <- total_A_L_20/total_A_20 # 좌파의 본투표비율
p_A_R_20 <- total_A_R_20/total_A_20 # 우파의 본투표비율

p_A_L_20
p_A_R_20

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_20 <- bm_A_20[bm_A_20$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_20 <- bm_A_20[bm_A_20$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_20 <- sub(",", "", total_ev_O_A_20) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_20 <- sub(",", "", total_ev_I_A_20)

total_ev_A_20 = sum(as.integer(total_ev_O_A_20), as.integer(total_ev_I_A_20)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_20 <- bm_A_20[bm_A_20$투표구명 == "관외사전투표" ,3]
ev_I_A_L_20 <- bm_A_20[bm_A_20$투표구명 == "관내사전투표",3]

ev_O_A_L_20 <- sub(",", "", ev_O_A_L_20)
ev_I_A_L_20 <- sub(",", "", ev_I_A_L_20)

ev_A_L_20 <- sum(as.integer(ev_O_A_L_20), as.integer(ev_I_A_L_20))

ev_A_L_20
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_20 <- bm_A_20[bm_A_20$투표구명 == "관외사전투표" ,4]
ev_I_A_R_20 <- bm_A_20[bm_A_20$투표구명 == "관내사전투표",4]

ev_O_A_R_20 <- sub(",", "", ev_O_A_R_20)
ev_I_A_R_20 <- sub(",", "", ev_I_A_R_20)

ev_A_R_20 <- sum(as.integer(ev_O_A_R_20), as.integer(ev_I_A_R_20))

ev_A_R_20


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_20 <- ev_A_L_20/total_ev_A_20
srp_A_L_20

dp_A_L_20 <- (srp_A_L_20)*(1-srp_A_L_20)/total_ev_A_20
dp_A_L_20

sdp_A_L_20 <- sqrt(dp_A_L_20)
sdp_A_L_20


# 우파 사전투표 비율

srp_A_R_20 <- ev_A_R_20/total_ev_A_20
srp_A_R_20

dp_A_R_20 <- (srp_A_R_20)*(1-srp_A_R_20)/total_ev_A_20
dp_A_R_20

sdp_A_R_20 <- sqrt(dp_A_R_20)
sdp_A_R_20

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_20-2.58*sdp_A_L_20, '<= p <=', srp_A_L_20+2.58*sdp_A_L_20)

if(p_A_L_20 >= srp_A_L_20-2.58*sdp_A_L_20 && p_A_L_20 <= srp_A_L_20+2.58*sdp_A_L_20){
  k_A_L_20 = abs(p_A_L_20-srp_A_L_20) / sdp_A_L_20
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_20 = abs(p_A_L_20-srp_A_L_20) / sdp_A_L_20
  cat("k값이", k_A_L_20, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_20-2.58*sdp_A_R_20, '<= p <=', srp_A_R_20+2.58*sdp_A_R_20)

if(p_A_R_20 >= srp_A_R_20-2.58*sdp_A_R_20 && p_A_R_20 <= srp_A_R_20+2.58*sdp_A_R_20){
  k_A_R_20 = abs(p_A_R_20-srp_A_R_20) / sdp_A_R_20
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_20 = abs(p_A_R_20-srp_A_R_20) / sdp_A_R_20
  cat("k값이", k_A_R_20, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_20
k_A_R_20
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_20 <- c(0)
kA_A_R_20 <- c(0)


if(k_A_L_20> 34.36129){
  kA_A_L_20 = 1  
}else if(k_A_R_20> 34.36129){
  kA_A_R_20 = 1
}else{
  kA_A_L_20 = 0
  kA_A_R_20 = 0
}

kA_A_L_20
kA_A_R_20

#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 21. 관악구 ###################################################
######################################## 갑 A ########################################################


bm_A_21 <- csv_21[c(5:85),c(2:6)] # 필요한 행과 열만 추출

bm_A_21 <- bm_A_21[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_21) <- c("투표구명", "투표수", "유기홍(좌파)", "이승한(민생당)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_21 <- bm_A_21[bm_A_21$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_21 <- sub(",", "", total_A_21)
total_A_21 <- as.integer(total_A_21)              # total_A_01 : 전체 투표수

total_A_L_21 <- bm_A_21[bm_A_21$투표구명 == "계", 3]
total_A_L_21 <- sub(",", "", total_A_L_21)
total_A_L_21 <- as.integer(total_A_L_21)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_21 <- bm_A_21[bm_A_21$투표구명 == "계", 4]
total_A_R_21 <- sub(",", "", total_A_R_21)
total_A_R_21 <- as.integer(total_A_R_21)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_21 <- total_A_L_21/total_A_21 # 좌파의 본투표비율
p_A_R_21 <- total_A_R_21/total_A_21 # 우파의 본투표비율

p_A_L_21
p_A_R_21

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_21 <- bm_A_21[bm_A_21$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_21 <- bm_A_21[bm_A_21$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_21 <- sub(",", "", total_ev_O_A_21) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_21 <- sub(",", "", total_ev_I_A_21)

total_ev_A_21 = sum(as.integer(total_ev_O_A_21), as.integer(total_ev_I_A_21)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_21 <- bm_A_21[bm_A_21$투표구명 == "관외사전투표" ,3]
ev_I_A_L_21 <- bm_A_21[bm_A_21$투표구명 == "관내사전투표",3]

ev_O_A_L_21 <- sub(",", "", ev_O_A_L_21)
ev_I_A_L_21 <- sub(",", "", ev_I_A_L_21)

ev_A_L_21 <- sum(as.integer(ev_O_A_L_21), as.integer(ev_I_A_L_21))

ev_A_L_21
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_21 <- bm_A_21[bm_A_21$투표구명 == "관외사전투표" ,4]
ev_I_A_R_21 <- bm_A_21[bm_A_21$투표구명 == "관내사전투표",4]

ev_O_A_R_21 <- sub(",", "", ev_O_A_R_21)
ev_I_A_R_21 <- sub(",", "", ev_I_A_R_21)

ev_A_R_21 <- sum(as.integer(ev_O_A_R_21), as.integer(ev_I_A_R_21))

ev_A_R_21


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_21 <- ev_A_L_21/total_ev_A_21
srp_A_L_21

dp_A_L_21 <- (srp_A_L_21)*(1-srp_A_L_21)/total_ev_A_21
dp_A_L_21

sdp_A_L_21 <- sqrt(dp_A_L_21)
sdp_A_L_21


# 우파 사전투표 비율

srp_A_R_21 <- ev_A_R_21/total_ev_A_21
srp_A_R_21

dp_A_R_21 <- (srp_A_R_21)*(1-srp_A_R_21)/total_ev_A_21
dp_A_R_21

sdp_A_R_21 <- sqrt(dp_A_R_21)
sdp_A_R_21

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_21-2.58*sdp_A_L_21, '<= p <=', srp_A_L_21+2.58*sdp_A_L_21)

if(p_A_L_21 >= srp_A_L_21-2.58*sdp_A_L_21 && p_A_L_21 <= srp_A_L_21+2.58*sdp_A_L_21){
  k_A_L_21 = abs(p_A_L_21-srp_A_L_21) / sdp_A_L_21
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_21 = abs(p_A_L_21-srp_A_L_21) / sdp_A_L_21
  cat("k값이", k_A_L_21, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_21-2.58*sdp_A_R_21, '<= p <=', srp_A_R_21+2.58*sdp_A_R_21)

if(p_A_R_21 >= srp_A_R_21-2.58*sdp_A_R_21 && p_A_R_21 <= srp_A_R_21+2.58*sdp_A_R_21){
  k_A_R_21 = abs(p_A_R_21-srp_A_R_21) / sdp_A_R_21
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_21 = abs(p_A_R_21-srp_A_R_21) / sdp_A_R_21
  cat("k값이", k_A_R_21, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_21
k_A_R_21
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_21 <- c(0)
kA_A_R_21 <- c(0)


if(k_A_L_21> 34.36129){
  kA_A_L_21 = 1  
}else if(k_A_R_21> 34.36129){
  kA_A_R_21 = 1
}else{
  kA_A_L_21 = 0
  kA_A_R_21 = 0
}

kA_A_L_21
kA_A_R_21


#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 22. 서초구 ###################################################
######################################## 갑 A ########################################################


bm_A_22 <- csv_22[c(5:74),c(2:6)] # 필요한 행과 열만 추출

bm_A_22 <- bm_A_22[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_22) <- c("투표구명", "투표수", "이정근(좌파)", "윤희숙(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_22 <- bm_A_22[bm_A_22$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_22 <- sub(",", "", total_A_22)
total_A_22 <- as.integer(total_A_22)              # total_A_01 : 전체 투표수

total_A_L_22 <- bm_A_22[bm_A_22$투표구명 == "계", 3]
total_A_L_22 <- sub(",", "", total_A_L_22)
total_A_L_22 <- as.integer(total_A_L_22)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_22 <- bm_A_22[bm_A_22$투표구명 == "계", 4]
total_A_R_22 <- sub(",", "", total_A_R_22)
total_A_R_22 <- as.integer(total_A_R_22)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_22 <- total_A_L_22/total_A_22 # 좌파의 본투표비율
p_A_R_22 <- total_A_R_22/total_A_22 # 우파의 본투표비율

p_A_L_22
p_A_R_22

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_22 <- bm_A_22[bm_A_22$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_22 <- bm_A_22[bm_A_22$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_22 <- sub(",", "", total_ev_O_A_22) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_22 <- sub(",", "", total_ev_I_A_22)

total_ev_A_22 = sum(as.integer(total_ev_O_A_22), as.integer(total_ev_I_A_22)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_22 <- bm_A_22[bm_A_22$투표구명 == "관외사전투표" ,3]
ev_I_A_L_22 <- bm_A_22[bm_A_22$투표구명 == "관내사전투표",3]

ev_O_A_L_22 <- sub(",", "", ev_O_A_L_22)
ev_I_A_L_22 <- sub(",", "", ev_I_A_L_22)

ev_A_L_22 <- sum(as.integer(ev_O_A_L_22), as.integer(ev_I_A_L_22))

ev_A_L_22
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_22 <- bm_A_22[bm_A_22$투표구명 == "관외사전투표" ,4]
ev_I_A_R_22 <- bm_A_22[bm_A_22$투표구명 == "관내사전투표",4]

ev_O_A_R_22 <- sub(",", "", ev_O_A_R_22)
ev_I_A_R_22 <- sub(",", "", ev_I_A_R_22)

ev_A_R_22 <- sum(as.integer(ev_O_A_R_22), as.integer(ev_I_A_R_22))

ev_A_R_22


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_22 <- ev_A_L_22/total_ev_A_22
srp_A_L_22

dp_A_L_22 <- (srp_A_L_22)*(1-srp_A_L_22)/total_ev_A_22
dp_A_L_22

sdp_A_L_22 <- sqrt(dp_A_L_22)
sdp_A_L_22


# 우파 사전투표 비율

srp_A_R_22 <- ev_A_R_22/total_ev_A_22
srp_A_R_22

dp_A_R_22 <- (srp_A_R_22)*(1-srp_A_R_22)/total_ev_A_22
dp_A_R_22

sdp_A_R_22 <- sqrt(dp_A_R_22)
sdp_A_R_22

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_22-2.58*sdp_A_L_22, '<= p <=', srp_A_L_22+2.58*sdp_A_L_22)

if(p_A_L_22 >= srp_A_L_22-2.58*sdp_A_L_22 && p_A_L_22 <= srp_A_L_22+2.58*sdp_A_L_22){
  k_A_L_22 = abs(p_A_L_22-srp_A_L_22) / sdp_A_L_22
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_22 = abs(p_A_L_22-srp_A_L_22) / sdp_A_L_22
  cat("k값이", k_A_L_22, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_22-2.58*sdp_A_R_22, '<= p <=', srp_A_R_22+2.58*sdp_A_R_22)

if(p_A_R_22 >= srp_A_R_22-2.58*sdp_A_R_22 && p_A_R_22 <= srp_A_R_22+2.58*sdp_A_R_22){
  k_A_R_22 = abs(p_A_R_22-srp_A_R_22) / sdp_A_R_22
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_22 = abs(p_A_R_22-srp_A_R_22) / sdp_A_R_22
  cat("k값이", k_A_R_22, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_22
k_A_R_22
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_22 <- c(0)
kA_A_R_22 <- c(0)


if(k_A_L_22> 34.36129){
  kA_A_L_22 = 1  
}else if(k_A_R_22> 34.36129){
  kA_A_R_22 = 1
}else{
  kA_A_L_22 = 0
  kA_A_R_22 = 0
}

kA_A_L_22
kA_A_R_22




#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 23. 강남구 ###################################################
######################################## 갑 A ########################################################


bm_A_23 <- csv_23[c(5:66),c(2:6)] # 필요한 행과 열만 추출

bm_A_23 <- bm_A_23[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_23) <- c("투표구명", "투표수", "김성곤(좌파)", "태구민(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_23 <- bm_A_23[bm_A_23$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_23 <- sub(",", "", total_A_23)
total_A_23 <- as.integer(total_A_23)              # total_A_01 : 전체 투표수

total_A_L_23 <- bm_A_23[bm_A_23$투표구명 == "계", 3]
total_A_L_23 <- sub(",", "", total_A_L_23)
total_A_L_23 <- as.integer(total_A_L_23)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_23 <- bm_A_23[bm_A_23$투표구명 == "계", 4]
total_A_R_23 <- sub(",", "", total_A_R_23)
total_A_R_23 <- as.integer(total_A_R_23)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_23 <- total_A_L_23/total_A_23 # 좌파의 본투표비율
p_A_R_23 <- total_A_R_23/total_A_23 # 우파의 본투표비율

p_A_L_23
p_A_R_23

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_23 <- bm_A_23[bm_A_23$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_23 <- bm_A_23[bm_A_23$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_23 <- sub(",", "", total_ev_O_A_23) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_23 <- sub(",", "", total_ev_I_A_23)

total_ev_A_23 = sum(as.integer(total_ev_O_A_23), as.integer(total_ev_I_A_23)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_23 <- bm_A_23[bm_A_23$투표구명 == "관외사전투표" ,3]
ev_I_A_L_23 <- bm_A_23[bm_A_23$투표구명 == "관내사전투표",3]

ev_O_A_L_23 <- sub(",", "", ev_O_A_L_23)
ev_I_A_L_23 <- sub(",", "", ev_I_A_L_23)

ev_A_L_23 <- sum(as.integer(ev_O_A_L_23), as.integer(ev_I_A_L_23))

ev_A_L_23
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_23 <- bm_A_23[bm_A_23$투표구명 == "관외사전투표" ,4]
ev_I_A_R_23 <- bm_A_23[bm_A_23$투표구명 == "관내사전투표",4]

ev_O_A_R_23 <- sub(",", "", ev_O_A_R_23)
ev_I_A_R_23 <- sub(",", "", ev_I_A_R_23)

ev_A_R_23 <- sum(as.integer(ev_O_A_R_23), as.integer(ev_I_A_R_23))

ev_A_R_23


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_23 <- ev_A_L_23/total_ev_A_23
srp_A_L_23

dp_A_L_23 <- (srp_A_L_23)*(1-srp_A_L_23)/total_ev_A_23
dp_A_L_23

sdp_A_L_23 <- sqrt(dp_A_L_23)
sdp_A_L_23


# 우파 사전투표 비율

srp_A_R_23 <- ev_A_R_23/total_ev_A_23
srp_A_R_23

dp_A_R_23 <- (srp_A_R_23)*(1-srp_A_R_23)/total_ev_A_23
dp_A_R_23

sdp_A_R_23 <- sqrt(dp_A_R_23)
sdp_A_R_23

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_23-2.58*sdp_A_L_23, '<= p <=', srp_A_L_23+2.58*sdp_A_L_23)

if(p_A_L_23 >= srp_A_L_23-2.58*sdp_A_L_23 && p_A_L_23 <= srp_A_L_23+2.58*sdp_A_L_23){
  k_A_L_23 = abs(p_A_L_23-srp_A_L_23) / sdp_A_L_23
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_23 = abs(p_A_L_23-srp_A_L_23) / sdp_A_L_23
  cat("k값이", k_A_L_23, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_23-2.58*sdp_A_R_23, '<= p <=', srp_A_R_23+2.58*sdp_A_R_23)

if(p_A_R_23 >= srp_A_R_23-2.58*sdp_A_R_23 && p_A_R_23 <= srp_A_R_23+2.58*sdp_A_R_23){
  k_A_R_23 = abs(p_A_R_23-srp_A_R_23) / sdp_A_R_23
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_23 = abs(p_A_R_23-srp_A_R_23) / sdp_A_R_23
  cat("k값이", k_A_R_23, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_23
k_A_R_23
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_23 <- c(0)
kA_A_R_23 <- c(0)


if(k_A_L_23> 34.36129){
  kA_A_L_23 = 1  
}else if(k_A_R_23> 34.36129){
  kA_A_R_23 = 1
}else{
  kA_A_L_23 = 0
  kA_A_R_23 = 0
}

kA_A_L_23
kA_A_R_23




#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 24. 송파구 ###################################################
######################################## 갑 A ########################################################


bm_A_24 <- csv_24[c(5:67),c(2:6)] # 필요한 행과 열만 추출

bm_A_24 <- bm_A_24[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_24) <- c("투표구명", "투표수", "조재희(좌파)", "김웅(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_24 <- bm_A_24[bm_A_24$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_24 <- sub(",", "", total_A_24)
total_A_24 <- as.integer(total_A_24)              # total_A_01 : 전체 투표수

total_A_L_24 <- bm_A_24[bm_A_24$투표구명 == "계", 3]
total_A_L_24 <- sub(",", "", total_A_L_24)
total_A_L_24 <- as.integer(total_A_L_24)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_24 <- bm_A_24[bm_A_24$투표구명 == "계", 4]
total_A_R_24 <- sub(",", "", total_A_R_24)
total_A_R_24 <- as.integer(total_A_R_24)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_24 <- total_A_L_24/total_A_24 # 좌파의 본투표비율
p_A_R_24 <- total_A_R_24/total_A_24 # 우파의 본투표비율

p_A_L_24
p_A_R_24

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_24 <- bm_A_24[bm_A_24$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_24 <- bm_A_24[bm_A_24$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_24 <- sub(",", "", total_ev_O_A_24) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_24 <- sub(",", "", total_ev_I_A_24)

total_ev_A_24 = sum(as.integer(total_ev_O_A_24), as.integer(total_ev_I_A_24)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_24 <- bm_A_24[bm_A_24$투표구명 == "관외사전투표" ,3]
ev_I_A_L_24 <- bm_A_24[bm_A_24$투표구명 == "관내사전투표",3]

ev_O_A_L_24 <- sub(",", "", ev_O_A_L_24)
ev_I_A_L_24 <- sub(",", "", ev_I_A_L_24)

ev_A_L_24 <- sum(as.integer(ev_O_A_L_24), as.integer(ev_I_A_L_24))

ev_A_L_24
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_24 <- bm_A_24[bm_A_24$투표구명 == "관외사전투표" ,4]
ev_I_A_R_24 <- bm_A_24[bm_A_24$투표구명 == "관내사전투표",4]

ev_O_A_R_24 <- sub(",", "", ev_O_A_R_24)
ev_I_A_R_24 <- sub(",", "", ev_I_A_R_24)

ev_A_R_24 <- sum(as.integer(ev_O_A_R_24), as.integer(ev_I_A_R_24))

ev_A_R_24


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_24 <- ev_A_L_24/total_ev_A_24
srp_A_L_24

dp_A_L_24 <- (srp_A_L_24)*(1-srp_A_L_24)/total_ev_A_24
dp_A_L_24

sdp_A_L_24 <- sqrt(dp_A_L_24)
sdp_A_L_24


# 우파 사전투표 비율

srp_A_R_24 <- ev_A_R_24/total_ev_A_24
srp_A_R_24

dp_A_R_24 <- (srp_A_R_24)*(1-srp_A_R_24)/total_ev_A_24
dp_A_R_24

sdp_A_R_24 <- sqrt(dp_A_R_24)
sdp_A_R_24

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_24-2.58*sdp_A_L_24, '<= p <=', srp_A_L_24+2.58*sdp_A_L_24)

if(p_A_L_24 >= srp_A_L_24-2.58*sdp_A_L_24 && p_A_L_24 <= srp_A_L_24+2.58*sdp_A_L_24){
  k_A_L_24 = abs(p_A_L_24-srp_A_L_24) / sdp_A_L_24
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_24 = abs(p_A_L_24-srp_A_L_24) / sdp_A_L_24
  cat("k값이", k_A_L_24, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_24-2.58*sdp_A_R_24, '<= p <=', srp_A_R_24+2.58*sdp_A_R_24)

if(p_A_R_24 >= srp_A_R_24-2.58*sdp_A_R_24 && p_A_R_24 <= srp_A_R_24+2.58*sdp_A_R_24){
  k_A_R_24 = abs(p_A_R_24-srp_A_R_24) / sdp_A_R_24
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_24 = abs(p_A_R_24-srp_A_R_24) / sdp_A_R_24
  cat("k값이", k_A_R_24, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_24
k_A_R_24
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_24 <- c(0)
kA_A_R_24 <- c(0)


if(k_A_L_24> 34.36129){
  kA_A_L_24 = 1  
}else if(k_A_R_24> 34.36129){
  kA_A_R_24 = 1
}else{
  kA_A_L_24 = 0
  kA_A_R_24 = 0
}

kA_A_L_24
kA_A_R_24



#########################################################################
#########################################################################
#########################################################################
#########################################################################


####################################### 25. 강동구 ###################################################
######################################## 갑 A ########################################################


bm_A_25 <- csv_25[c(5:87),c(2:6)] # 필요한 행과 열만 추출

bm_A_25 <- bm_A_25[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_A_25) <- c("투표구명", "투표수", "진선미(좌파)", "이수희(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_25 <- bm_A_25[bm_A_25$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_25 <- sub(",", "", total_A_25)
total_A_25 <- as.integer(total_A_25)              # total_A_01 : 전체 투표수

total_A_L_25 <- bm_A_25[bm_A_25$투표구명 == "계", 3]
total_A_L_25 <- sub(",", "", total_A_L_25)
total_A_L_25 <- as.integer(total_A_L_25)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_25 <- bm_A_25[bm_A_25$투표구명 == "계", 4]
total_A_R_25 <- sub(",", "", total_A_R_25)
total_A_R_25 <- as.integer(total_A_R_25)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_25 <- total_A_L_25/total_A_25 # 좌파의 본투표비율
p_A_R_25 <- total_A_R_25/total_A_25 # 우파의 본투표비율

p_A_L_25
p_A_R_25

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_25 <- bm_A_25[bm_A_25$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_25 <- bm_A_25[bm_A_25$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_25 <- sub(",", "", total_ev_O_A_25) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_25 <- sub(",", "", total_ev_I_A_25)

total_ev_A_25 = sum(as.integer(total_ev_O_A_25), as.integer(total_ev_I_A_25)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_25 <- bm_A_25[bm_A_25$투표구명 == "관외사전투표" ,3]
ev_I_A_L_25 <- bm_A_25[bm_A_25$투표구명 == "관내사전투표",3]

ev_O_A_L_25 <- sub(",", "", ev_O_A_L_25)
ev_I_A_L_25 <- sub(",", "", ev_I_A_L_25)

ev_A_L_25 <- sum(as.integer(ev_O_A_L_25), as.integer(ev_I_A_L_25))

ev_A_L_25
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_25 <- bm_A_25[bm_A_25$투표구명 == "관외사전투표" ,4]
ev_I_A_R_25 <- bm_A_25[bm_A_25$투표구명 == "관내사전투표",4]

ev_O_A_R_25 <- sub(",", "", ev_O_A_R_25)
ev_I_A_R_25 <- sub(",", "", ev_I_A_R_25)

ev_A_R_25 <- sum(as.integer(ev_O_A_R_25), as.integer(ev_I_A_R_25))

ev_A_R_25


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_25 <- ev_A_L_25/total_ev_A_25
srp_A_L_25

dp_A_L_25 <- (srp_A_L_25)*(1-srp_A_L_25)/total_ev_A_25
dp_A_L_25

sdp_A_L_25 <- sqrt(dp_A_L_25)
sdp_A_L_25


# 우파 사전투표 비율

srp_A_R_25 <- ev_A_R_25/total_ev_A_25
srp_A_R_25

dp_A_R_25 <- (srp_A_R_25)*(1-srp_A_R_25)/total_ev_A_25
dp_A_R_25

sdp_A_R_25 <- sqrt(dp_A_R_25)
sdp_A_R_25

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_25-2.58*sdp_A_L_25, '<= p <=', srp_A_L_25+2.58*sdp_A_L_25)

if(p_A_L_25 >= srp_A_L_25-2.58*sdp_A_L_25 && p_A_L_25 <= srp_A_L_25+2.58*sdp_A_L_25){
  k_A_L_25 = abs(p_A_L_25-srp_A_L_25) / sdp_A_L_25
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_25 = abs(p_A_L_25-srp_A_L_25) / sdp_A_L_25
  cat("k값이", k_A_L_25, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_25-2.58*sdp_A_R_25, '<= p <=', srp_A_R_25+2.58*sdp_A_R_25)

if(p_A_R_25 >= srp_A_R_25-2.58*sdp_A_R_25 && p_A_R_25 <= srp_A_R_25+2.58*sdp_A_R_25){
  k_A_R_25 = abs(p_A_R_25-srp_A_R_25) / sdp_A_R_25
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_25 = abs(p_A_R_25-srp_A_R_25) / sdp_A_R_25
  cat("k값이", k_A_R_25, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_25
k_A_R_25
##########################################################################
# k(or z) 이상치값 추출

kA_A_L_25 <- c(0)
kA_A_R_25 <- c(0)


if(k_A_L_25> 34.36129){
  kA_A_L_25 = 1  
}else if(k_A_R_25> 34.36129){
  kA_A_R_25 = 1
}else{
  kA_A_L_25 = 0
  kA_A_R_25 = 0
}

kA_A_L_25
kA_A_R_25





#######################################################################################################

#######################################################################################################

#######################################################################################################

#######################################################################################################

# 좌파의 k값

k_A_L <- c(k_A_L_01, k_A_L_02, k_A_L_03, k_A_L_04, k_A_L_05, k_A_L_06, k_A_L_07, k_A_L_08, k_A_L_09
           , k_A_L_10, k_A_L_11, k_A_L_12, k_A_L_13, k_A_L_14, k_A_L_15, k_A_L_16, k_A_L_17, k_A_L_18
           , k_A_L_19, k_A_L_20, k_A_L_21, k_A_L_22, k_A_L_23, k_A_L_24, k_A_L_25)


# 우파의 k값

k_A_R <- c(k_A_R_01, k_A_R_02, k_A_R_03, k_A_R_04, k_A_R_05, k_A_R_06, k_A_R_07, k_A_R_08, k_A_R_09
           , k_A_R_10, k_A_R_11, k_A_R_12, k_A_R_13, k_A_R_14, k_A_R_15, k_A_R_16, k_A_R_17, k_A_R_18
           , k_A_R_19, k_A_R_20, k_A_R_21, k_A_R_22, k_A_R_23, k_A_R_24, k_A_R_25)


k_A_L
k_A_R

mean(k_A_L)
max(k_A_L)
quantile(k_A_L)
quantile(k_A_L, prob = c(0.4,0.6))

# 임의로 정한 기준치를 넘어가는 k가 있는 지역(좌/ 우 통합)

kA_A_L <- c(kA_A_L_01, kA_A_L_02, kA_A_L_03, kA_A_L_04, kA_A_L_05, kA_A_L_06, kA_A_L_07, kA_A_L_08, kA_A_L_09
            , kA_A_L_10, kA_A_L_11, kA_A_L_12, kA_A_L_13, kA_A_L_14, kA_A_L_15, kA_A_L_16, kA_A_L_17, kA_A_L_18
            , kA_A_L_19, kA_A_L_20, kA_A_L_21, kA_A_L_22, kA_A_L_23, kA_A_L_24, kA_A_L_25)


kA_A_R <- c(kA_A_R_01, kA_A_R_02, kA_A_R_03, kA_A_R_04, kA_A_R_05, kA_A_R_06, kA_A_R_07, kA_A_R_08, kA_A_R_09
            , kA_A_R_10, kA_A_R_11, kA_A_R_12, kA_A_R_13, kA_A_R_14, kA_A_R_15, kA_A_R_16, kA_A_R_17, kA_A_R_18
            , kA_A_R_19, kA_A_R_20, kA_A_R_21, kA_A_R_22, kA_A_R_23, kA_A_R_24, kA_A_R_25)

kA_A_L
kA_A_R

# 좌파 사전득표 - 우파 사전득표 > 0 이면서 좌파 당일득표 - 우파 당일득표 < 0
# 당일득표(전체 득표 - 사전득표)
# 기준 이상치를 넘어가는 3(용산구), 15(양천구),  22(서초구), 25(강동구)
# 단, 이상치를 넘지만 21(관악구)는 우파가 없어서 제외

doubt_01 = 0
if(ev_A_L_01 - ev_A_R_01 > 5000 && (total_A_L_01 - ev_A_L_01) - (total_A_R_01 - ev_A_R_01) < 2000){
  doubt_01 = 1
}
doubt_01

doubt_02 = 0
if(ev_A_L_02 - ev_A_R_02 > 5000 && (total_A_L_02 - ev_A_L_02) - (total_A_R_02 - ev_A_R_02) < 2000){
  doubt_02 = 1
}
doubt_02

doubt_03 = 0
if(ev_A_L_03 - ev_A_R_03 > 5000 && (total_A_L_03 - ev_A_L_03) - (total_A_R_03 - ev_A_R_03) < 2000){
  doubt_03 = 1
}
doubt_03

doubt_04 = 0
if(ev_A_L_04 - ev_A_R_04 > 5000 && (total_A_L_04 - ev_A_L_04) - (total_A_R_04 - ev_A_R_04) < 2000){
  doubt_04 = 1
}
doubt_04

doubt_05 = 0
if(ev_A_L_05 - ev_A_R_05 > 5000 && (total_A_L_05 - ev_A_L_05) - (total_A_R_05 - ev_A_R_05) < 2000){
  doubt_05 = 1
}
doubt_05

doubt_06 = 0
if(ev_A_L_06 - ev_A_R_06 > 5000 && (total_A_L_06 - ev_A_L_06) - (total_A_R_06 - ev_A_R_06) < 2000){
  doubt_06 = 1
}
doubt_06

doubt_07 = 0
if(ev_A_L_07 - ev_A_R_07 > 5000 && (total_A_L_07 - ev_A_L_07) - (total_A_R_07 - ev_A_R_07) < 2000){
  doubt_07 = 1
}
doubt_07

doubt_08 = 0
if(ev_A_L_08 - ev_A_R_08 > 5000 && (total_A_L_08 - ev_A_L_08) - (total_A_R_08 - ev_A_R_08) < 2000){
  doubt_08 = 1
}
doubt_08

doubt_09 = 0
if(ev_A_L_09 - ev_A_R_09 > 5000 && (total_A_L_09 - ev_A_L_09) - (total_A_R_09 - ev_A_R_09) < 2000){
  doubt_09 = 1
}
doubt_09

doubt_10 = 0
if(ev_A_L_10 - ev_A_R_10 > 5000 && (total_A_L_10 - ev_A_L_10) - (total_A_R_10 - ev_A_R_10) < 2000){
  doubt_10 = 1
}
doubt_10

doubt_11 = 0
if(ev_A_L_11 - ev_A_R_11 > 5000 && (total_A_L_11 - ev_A_L_11) - (total_A_R_11 - ev_A_R_11) < 2000){
  doubt_11 = 1
}
doubt_11

doubt_12 = 0
if(ev_A_L_12 - ev_A_R_12 > 5000 && (total_A_L_12 - ev_A_L_12) - (total_A_R_12 - ev_A_R_12) < 2000){
  doubt_12 = 1
}
doubt_12

doubt_13 = 0
if(ev_A_L_13 - ev_A_R_13 > 5000 && (total_A_L_13 - ev_A_L_13) - (total_A_R_13 - ev_A_R_13) < 2000){
  doubt_13 = 1
}
doubt_13

doubt_14 = 0
if(ev_A_L_14 - ev_A_R_14 > 5000 && (total_A_L_14 - ev_A_L_14) - (total_A_R_14 - ev_A_R_14) < 2000){
  doubt_14 = 1
}
doubt_14

doubt_15 = 0
if(ev_A_L_15 - ev_A_R_15 > 5000 && (total_A_L_15 - ev_A_L_15) - (total_A_R_15 - ev_A_R_15) < 2000){
  doubt_15 = 1
}
doubt_15

doubt_16 = 0
if(ev_A_L_16 - ev_A_R_16 > 5000 && (total_A_L_16 - ev_A_L_16) - (total_A_R_16 - ev_A_R_16) < 2000){
  doubt_16 = 1
}
doubt_16

doubt_17 = 0
if(ev_A_L_17 - ev_A_R_17 > 5000 && (total_A_L_17 - ev_A_L_17) - (total_A_R_17 - ev_A_R_17) < 2000){
  doubt_17 = 1
}
doubt_17

doubt_18 = 0
if(ev_A_L_18 - ev_A_R_18 > 5000 && (total_A_L_18 - ev_A_L_18) - (total_A_R_18 - ev_A_R_18) < 2000){
  doubt_18 = 1
}
doubt_18

doubt_19 = 0
if(ev_A_L_19 - ev_A_R_19 > 5000 && (total_A_L_19 - ev_A_L_19) - (total_A_R_19 - ev_A_R_19) < 2000){
  doubt_19 = 1
}
doubt_19

doubt_20 = 0
if(ev_A_L_20 - ev_A_R_20 > 5000 && (total_A_L_20 - ev_A_L_20) - (total_A_R_20 - ev_A_R_20) < 2000){
  doubt_20 = 1
}
doubt_20

doubt_21 = 0
if(ev_A_L_21 - ev_A_R_21 > 5000 && (total_A_L_21 - ev_A_L_21) - (total_A_R_21 - ev_A_R_21) < 2000){
  doubt_21 = 1
}
doubt_21

doubt_22 = 0
if(ev_A_L_22 - ev_A_R_22 > 5000 && (total_A_L_22 - ev_A_L_22) - (total_A_R_22 - ev_A_R_22) < 2000){
  doubt_22 = 1
}
doubt_22

doubt_23 = 0
if(ev_A_L_23 - ev_A_R_23 > 5000 && (total_A_L_23 - ev_A_L_23) - (total_A_R_23 - ev_A_R_23) < 2000){
  doubt_23 = 1
}
doubt_23

doubt_24 = 0
if(ev_A_L_24 - ev_A_R_24 > 5000 && (total_A_L_24 - ev_A_L_24) - (total_A_R_24 - ev_A_R_24) < 2000){
  doubt_24 = 1
}
doubt_24

doubt_25 = 0
if(ev_A_L_25 - ev_A_R_25 > 5000 && (total_A_L_25 - ev_A_L_25) - (total_A_R_25 - ev_A_R_25) < 2000){
  doubt_25 = 1
}
doubt_25

doubt <- c(doubt_01, doubt_02, doubt_03, doubt_04, doubt_05, doubt_06, doubt_07, doubt_08, doubt_09,
           doubt_10, doubt_11, doubt_12, doubt_13, doubt_14, doubt_15, doubt_16, doubt_17, doubt_18,
           doubt_19, doubt_20, doubt_21, doubt_22, doubt_23, doubt_24, doubt_25)

doubt

# k값이 평균을 넘으면서, 의심지역에 속하는 퍼센트
#의심지역(doubt)
cat(( length(which(kA_A_L == doubt)) / 25 ) * 100,"%")
kA_A_L == doubt
Doubt <- kA_A_L == doubt
Doubt
DoubtInt = as.integer(Doubt)


###############################################################################################################
###############################################################################################################
###############################################################################################################
# 지도에 그림을 그리기 위해서 필요한 2가지
# 1) 시각화 대상이 되는 데이터셋(여기서는 match_map.csv) - id 컬럼으로 구를 구분
# 2) 지리 정보 데이터셋 (click-site-link, http://www.gisdeveloper.co.kr/?p=2332)


# id 컬럼이 있는 match_map.csv 를 불러온 후 추가로 필요한 값을 붙인다.
P <- read.csv("C:/Users/F1225/Desktop/사전선거/서울시 지도 시각화/match_map.csv", header = TRUE) #시각화할 데이터셋
P
P <- cbind(P, k_A_L)
P <- cbind(P, k_A_R)
P <- cbind(P, DoubtInt)

colnames(P) <- c("시도명", "시군구명", "id", "좌파 k값", "우파 k값", "A")
P

map <- shapefile("C:/Users/F1225/Desktop/사전선거/서울시 지도 시각화/TL_SCCO_SIG.shp") #지리 정보 데이터셋


# 시각화를 위해 map을 spTransform() 함수를 이용하여 좌표계 변환을 진행한다.
map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'))

#map@polygons[[1]]@Polygons[[1]]@coords %>% head(n = 10L)


# fortify()함수를 이용하여 map을 data frame으로 변환
# region = 'SIG_CD' 옵션으로 인해 SIG_CD 컬럼이 id로 변환된다.
new_map <- fortify(map, region = 'SIG_CD')
View(new_map)

# 지리 정보 자료에는 대한민국에 모든 구가 포함되어 있기 때문에 서울만을 빼낸다.
# id가 11740 이하가 서울시 구에 해당, id 변수를 숫자로 변환한 후 11740 이하만 추출하여 seoul_map 변수를 생성
new_map$id <- as.numeric(new_map$id)
seoul_map <- new_map[new_map$id <= 11740,]

# 시각화할 자료와 seoul_map를 id 변수를 key로 조인. merge() 함수 사용.
P_merge <- merge(seoul_map, P, by='id')
###########################################################################################################
ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group, fill = A, color = 'red')) + 
  ggtitle(label = "사전선거가 의심되는 지역(하늘색)")



































####################################### 77. 검증용###################################################

csv_77 <- read.csv("C:/Users/F1325/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/20년 검증용.csv")


bm_77 <- csv_77[c(5:85),c(2:6)] # 필요한 행과 열만 추출

bm_77 <- bm_77[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_77) <- c("투표구명", "투표수", "오세훈(우파)", "정세균(좌파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_77 <- bm_77[bm_77$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_77 <- sub(",", "", total_A_77)
total_A_77 <- as.integer(total_A_77)              # total_A_01 : 전체 투표수

total_A_L_77 <- bm_77[bm_77$투표구명 == "계", 3]
total_A_L_77 <- sub(",", "", total_A_L_77)
total_A_L_77 <- as.integer(total_A_L_77)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_77 <- bm_77[bm_77$투표구명 == "계", 4]
total_A_R_77 <- sub(",", "", total_A_R_77)
total_A_R_77 <- as.integer(total_A_R_77)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_77 <- total_A_L_77/total_A_77 # 좌파의 본투표비율
p_A_R_77 <- total_A_R_77/total_A_77 # 우파의 본투표비율

p_A_L_77
p_A_R_77

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_77 <- bm_77[bm_77$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_77 <- bm_77[bm_77$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_77 <- sub(",", "", total_ev_O_A_77) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_77 <- sub(",", "", total_ev_I_A_77)

total_ev_A_77 = sum(as.integer(total_ev_O_A_77), as.integer(total_ev_I_A_77)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_77 <- bm_77[bm_77$투표구명 == "관외사전투표" ,3]
ev_I_A_L_77 <- bm_77[bm_77$투표구명 == "관내사전투표",3]

ev_O_A_L_77 <- sub(",", "", ev_O_A_L_77)
ev_I_A_L_77 <- sub(",", "", ev_I_A_L_77)

ev_A_L_77 <- sum(as.integer(ev_O_A_L_77), as.integer(ev_I_A_L_77))

ev_A_L_77
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_77 <- bm_77[bm_77$투표구명 == "관외사전투표" ,4]
ev_I_A_R_77 <- bm_77[bm_77$투표구명 == "관내사전투표",4]

ev_O_A_R_77 <- sub(",", "", ev_O_A_R_77)
ev_I_A_R_77 <- sub(",", "", ev_I_A_R_77)

ev_A_R_77 <- sum(as.integer(ev_O_A_R_77), as.integer(ev_I_A_R_77))

ev_A_R_77


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_77 <- ev_A_L_77/total_ev_A_77
srp_A_L_77

dp_A_L_77 <- (srp_A_L_77)*(1-srp_A_L_77)/total_ev_A_77
dp_A_L_77

sdp_A_L_77 <- sqrt(dp_A_L_77)
sdp_A_L_77


# 우파 사전투표 비율

srp_A_R_77 <- ev_A_R_77/total_ev_A_77
srp_A_R_77

dp_A_R_77 <- (srp_A_R_77)*(1-srp_A_R_77)/total_ev_A_77
dp_A_R_77

sdp_A_R_77 <- sqrt(dp_A_R_77)
sdp_A_R_77

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_77-2.58*sdp_A_L_77, '<= p <=', srp_A_L_77+2.58*sdp_A_L_77)

if(p_A_L_77 >= srp_A_L_77-2.58*sdp_A_L_77 && p_A_L_77 <= srp_A_L_77+2.58*sdp_A_L_77){
  k_A_L_77 = abs(p_A_L_77-srp_A_L_77) / sdp_A_L_77
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_77 = abs(p_A_L_77-srp_A_L_77) / sdp_A_L_77
  cat("k값이", k_A_L_77, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_77-2.58*sdp_A_R_77, '<= p <=', srp_A_R_77+2.58*sdp_A_R_77)

if(p_A_R_77 >= srp_A_R_77-2.58*sdp_A_R_77 && p_A_R_77 <= srp_A_R_77+2.58*sdp_A_R_77){
  k_A_R_77 = abs(p_A_R_77-srp_A_R_77) / sdp_A_R_77
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_77 = abs(p_A_R_77-srp_A_R_77) / sdp_A_R_77
  cat("k값이", k_A_R_77, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_77
k_A_R_77
##########################################################################
# k(or z) 이상치값 추출

if(k_A_L_77 > 5 || k_A_R_77 > 5){
  k_A_77 = 1  
}else{
  k_A_77 = 0
}


k_A_77



#########$#$#$#$#$#$#$$######################

####################################### 99. 21대 전북 군산 ###################################################

csv_99 <- read.csv("C:/Users/F1325/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/21대전북군산.csv")


bm_99 <- csv_99[c(5:149),c(2:6)] # 필요한 행과 열만 추출

bm_99 <- bm_99[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_99) <- c("투표구명", "투표수", "신영대(좌파)", "이근열(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_99 <- bm_99[bm_99$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_99 <- sub(",", "", total_A_99)
total_A_99 <- as.integer(total_A_99)              # total_A_01 : 전체 투표수

total_A_L_99 <- bm_99[bm_99$투표구명 == "계", 3]
total_A_L_99 <- sub(",", "", total_A_L_99)
total_A_L_99 <- as.integer(total_A_L_99)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_99 <- bm_99[bm_99$투표구명 == "계", 4]
total_A_R_99 <- sub(",", "", total_A_R_99)
total_A_R_99 <- as.integer(total_A_R_99)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_99 <- total_A_L_99/total_A_99 # 좌파의 본투표비율
p_A_R_99 <- total_A_R_99/total_A_99 # 우파의 본투표비율

p_A_L_99
p_A_R_99

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_99 <- bm_99[bm_99$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_99 <- bm_99[bm_99$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_99 <- sub(",", "", total_ev_O_A_99) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_99 <- sub(",", "", total_ev_I_A_99)

total_ev_A_99 = sum(as.integer(total_ev_O_A_99), as.integer(total_ev_I_A_99)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_99 <- bm_99[bm_99$투표구명 == "관외사전투표" ,3]
ev_I_A_L_99 <- bm_99[bm_99$투표구명 == "관내사전투표",3]

ev_O_A_L_99 <- sub(",", "", ev_O_A_L_99)
ev_I_A_L_99 <- sub(",", "", ev_I_A_L_99)

ev_A_L_99 <- sum(as.integer(ev_O_A_L_99), as.integer(ev_I_A_L_99))

ev_A_L_99
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_99 <- bm_99[bm_99$투표구명 == "관외사전투표" ,4]
ev_I_A_R_99 <- bm_99[bm_99$투표구명 == "관내사전투표",4]

ev_O_A_R_99 <- sub(",", "", ev_O_A_R_99)
ev_I_A_R_99 <- sub(",", "", ev_I_A_R_99)

ev_A_R_99 <- sum(as.integer(ev_O_A_R_99), as.integer(ev_I_A_R_99))

ev_A_R_99


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_99 <- ev_A_L_99/total_ev_A_99
srp_A_L_99

dp_A_L_99 <- (srp_A_L_99)*(1-srp_A_L_99)/total_ev_A_99
dp_A_L_99

sdp_A_L_99 <- sqrt(dp_A_L_99)
sdp_A_L_99


# 우파 사전투표 비율

srp_A_R_99 <- ev_A_R_99/total_ev_A_99
srp_A_R_99

dp_A_R_99 <- (srp_A_R_99)*(1-srp_A_R_99)/total_ev_A_99
dp_A_R_99

sdp_A_R_99 <- sqrt(dp_A_R_99)
sdp_A_R_99

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_99-2.58*sdp_A_L_99, '<= p <=', srp_A_L_99+2.58*sdp_A_L_99)

if(p_A_L_99 >= srp_A_L_99-2.58*sdp_A_L_99 && p_A_L_99 <= srp_A_L_99+2.58*sdp_A_L_99){
  k_A_L_99 = abs(p_A_L_99-srp_A_L_99) / sdp_A_L_99
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_99 = abs(p_A_L_99-srp_A_L_99) / sdp_A_L_99
  cat("k값이", k_A_L_99, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_99-2.58*sdp_A_R_99, '<= p <=', srp_A_R_99+2.58*sdp_A_R_99)

if(p_A_R_99 >= srp_A_R_99-2.58*sdp_A_R_99 && p_A_R_99 <= srp_A_R_99+2.58*sdp_A_R_99){
  k_A_R_99 = abs(p_A_R_99-srp_A_R_99) / sdp_A_R_99
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_99 = abs(p_A_R_99-srp_A_R_99) / sdp_A_R_99
  cat("k값이", k_A_R_99, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_99
k_A_R_99
##########################################################################
# k(or z) 이상치값 추출

if(k_A_L_99 > 30 || k_A_R_99 > 30){
  k_A_99 = 1  
}else{
  k_A_99 = 0
}


k_A_99




#########$#$#$#$#$#$#$$######################

####################################### 88. 21대 대구 서구###################################################

csv_88 <- read.csv("C:/Users/F1325/Desktop/사전선거/제 21대 국회의원선거 개표현황(투표구별)(서울특별시)/21대_대구_서구.csv")


bm_88 <- csv_88[c(5:98),c(2:6)] # 필요한 행과 열만 추출

bm_88 <- bm_88[-c(2)] # 1차로 추출된 데이터에서 다시 2차 가공(필요없는 열 삭제, 선거인수)

names(bm_88) <- c("투표구명", "투표수", "윤선진(좌파)", "김상훈(우파)") # 열 이름 변경

#############################################################################################

# 본투표비율(우파(좌파) 득표수를 전체 투표수로 나눈 값) #

total_A_88 <- bm_88[bm_88$투표구명 == "계", 2] # 값을 추출하고 / 쉼표를 제거 후 / 정수형으로 변환
total_A_88 <- sub(",", "", total_A_88)
total_A_88 <- as.integer(total_A_88)              # total_A_01 : 전체 투표수

total_A_L_88 <- bm_88[bm_88$투표구명 == "계", 3]
total_A_L_88 <- sub(",", "", total_A_L_88)
total_A_L_88 <- as.integer(total_A_L_88)              # total_A_L_01 : 전체 투표수에서 좌파 득표 수

total_A_R_88 <- bm_88[bm_88$투표구명 == "계", 4]
total_A_R_88 <- sub(",", "", total_A_R_88)
total_A_R_88 <- as.integer(total_A_R_88)              # total_A_R_01 : 전체 투표수에서 우파 득표 수

p_A_L_88 <- total_A_L_88/total_A_88 # 좌파의 본투표비율
p_A_R_88 <- total_A_R_88/total_A_88 # 우파의 본투표비율

p_A_L_88
p_A_R_88

#############################################################################################

# 관외, 관내 사전투표 전체 투표수 #

total_ev_O_A_88 <- bm_88[bm_88$투표구명 == "관외사전투표" ,2] # 관외사전투표행의 투표수 / 행이 관외사전투표이면서 2번째 열 추출

total_ev_I_A_88 <- bm_88[bm_88$투표구명 == "관내사전투표",2] # 관내사전투표행의 투표수

total_ev_O_A_88 <- sub(",", "", total_ev_O_A_88) # 쉼표때문에 문자열로 인식되서 쉼표 지움

total_ev_I_A_88 <- sub(",", "", total_ev_I_A_88)

total_ev_A_88 = sum(as.integer(total_ev_O_A_88), as.integer(total_ev_I_A_88)) #사전투표 전체(문자열을 정수로 바꾼 후 더함.)

#############################################################################################

# 관외, 관내 사전투표 좌파 투표수#

ev_O_A_L_88 <- bm_88[bm_88$투표구명 == "관외사전투표" ,3]
ev_I_A_L_88 <- bm_88[bm_88$투표구명 == "관내사전투표",3]

ev_O_A_L_88 <- sub(",", "", ev_O_A_L_88)
ev_I_A_L_88 <- sub(",", "", ev_I_A_L_88)

ev_A_L_88 <- sum(as.integer(ev_O_A_L_88), as.integer(ev_I_A_L_88))

ev_A_L_88
#############################################################################################

# 관외, 관내 사전투표 우파 투표수#

ev_O_A_R_88 <- bm_88[bm_88$투표구명 == "관외사전투표" ,4]
ev_I_A_R_88 <- bm_88[bm_88$투표구명 == "관내사전투표",4]

ev_O_A_R_88 <- sub(",", "", ev_O_A_R_88)
ev_I_A_R_88 <- sub(",", "", ev_I_A_R_88)

ev_A_R_88 <- sum(as.integer(ev_O_A_R_88), as.integer(ev_I_A_R_88))

ev_A_R_88


##############################################################################################

########################### k값 계산


# 좌파 사전투표 비율#

srp_A_L_88 <- ev_A_L_88/total_ev_A_88
srp_A_L_88

dp_A_L_88 <- (srp_A_L_88)*(1-srp_A_L_88)/total_ev_A_88
dp_A_L_88

sdp_A_L_88 <- sqrt(dp_A_L_88)
sdp_A_L_88


# 우파 사전투표 비율

srp_A_R_88 <- ev_A_R_88/total_ev_A_88
srp_A_R_88

dp_A_R_88 <- (srp_A_R_88)*(1-srp_A_R_88)/total_ev_A_88
dp_A_R_88

sdp_A_R_88 <- sqrt(dp_A_R_88)
sdp_A_R_88

################ 신뢰도 99% (k = 2.58)



# 좌파

cat(srp_A_L_88-2.58*sdp_A_L_88, '<= p <=', srp_A_L_88+2.58*sdp_A_L_88)

if(p_A_L_88 >= srp_A_L_88-2.58*sdp_A_L_88 && p_A_L_88 <= srp_A_L_88+2.58*sdp_A_L_88){
  k_A_L_88 = abs(p_A_L_88-srp_A_L_88) / sdp_A_L_88
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_L_88 = abs(p_A_L_88-srp_A_L_88) / sdp_A_L_88
  cat("k값이", k_A_L_88, "일 경우 신뢰구간에 포함이 됩니다.")
}

# 우파

cat(srp_A_R_88-2.58*sdp_A_R_88, '<= p <=', srp_A_R_88+2.58*sdp_A_R_88)

if(p_A_R_88 >= srp_A_R_88-2.58*sdp_A_R_88 && p_A_R_88 <= srp_A_R_88+2.58*sdp_A_R_88){
  k_A_R_88 = abs(p_A_R_88-srp_A_R_88) / sdp_A_R_88
  cat("99% 신뢰구간에 포함됩니다.")
}else{
  cat("99% 신뢰구간을 벗어납니다.\n")
  # k = (모비율과 표본비율의 차) / 표본표준편차
  k_A_R_88 = abs(p_A_R_88-srp_A_R_88) / sdp_A_R_88
  cat("k값이", k_A_R_88, "일 경우 신뢰구간에 포함이 됩니다.")
}


k_A_L_88
k_A_R_88
##########################################################################
# k(or z) 이상치값 추출

if(k_A_L_88 > 30 || k_A_R_88 > 30){
  k_A_88 = 1  
}else{
  k_A_88 = 0
}


k_A_88









































































#########################################################################


#########################################################################



#P <- read.csv("D:/1. 다운로드/sample.csv", header = TRUE) #시각화할 데이터셋
#map <- shapefile("D:/1. 다운로드/TL_SCCO_SIG.shp") #지리 정보 데이터셋



#map <- spTransform(map, CRSobj = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'))

#map@polygons[[1]]@Polygons[[1]]@coords %>% head(n = 10L)

#new_map <- fortify(map, region = 'SIG_CD')
#View(new_map)

#new_map$id <- as.numeric(new_map$id)
#seoul_map <- new_map[new_map$id <= 11740,]

#P_merge <- merge(seoul_map, P, by='id')
###########################################################################################################
#ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group), fill = 'yellow', color='red')
###########################################################################################################
#ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group, fill = A, color = 'red'))
#ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group, fill = B, color = 'red'))

###########################################################################################################
plot <- ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group, fill = A))
plot + scale_fill_gradient(low = "#ffe5e5", high = "#ff3232", space = "Lab", guide = "colourbar") 
+ theme_bw() + labs(title = "서울시 A 분포") 
+ theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank(), plot.title = element_text(face = "bold", size = 18, hjust = 0.5))
###########################################################################################################
plot <- ggplot() + geom_polygon(data = P_merge, aes(x=long, y=lat, group=group, fill = B))
plot + scale_fill_gradient(low = "#ffffe5", high = "#ffb825", space = "Lab", guide = "colourbar")
+ theme_bw() + labs(title = "서울시 B 분포") 
+ theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank(), plot.title = element_text(face = "bold", size = 18, hjust = 0.5))
###########################################################################################################



